{
    "version": "https://jsonfeed.org/version/1",
    "title": "Tianciの小窝 • All posts by \"dotnet\" category",
    "description": "一身清贫怎敢入繁华<br>两袖清风岂能误佳人",
    "home_page_url": "https://blog.lovetianci.cn",
    "items": [
        {
            "id": "https://blog.lovetianci.cn/DotNET/DotNET6_Publish_Error/",
            "url": "https://blog.lovetianci.cn/DotNET/DotNET6_Publish_Error/",
            "title": "DotNET6发布Publish失败",
            "date_published": "2022-07-19T17:30:00.000Z",
            "content_html": "<a id=\"more\"></a>\n<h3 id=\"错误信息\"><a class=\"markdownIt-Anchor\" href=\"#错误信息\">#</a> 错误信息</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>C:<span class=\"token punctuation\">\\</span>Program Files<span class=\"token punctuation\">\\</span>dotnet<span class=\"token punctuation\">\\</span>sdk<span class=\"token punctuation\">\\</span><span class=\"token number\">6.0</span>.100<span class=\"token punctuation\">\\</span>Sdks<span class=\"token punctuation\">\\</span>Microsoft.NET.Sdk<span class=\"token punctuation\">\\</span>targets<span class=\"token punctuation\">\\</span>Microsoft.NET.ConflictResolution.targets<span class=\"token punctuation\">(</span><span class=\"token number\">112,5</span><span class=\"token punctuation\">)</span>: error NETSDK1152: 找到了多个具有相同相对路径的发布输出文件:</pre></td></tr></table></figure><h3 id=\"官方文档解决属性erroronduplicatepublishoutputfiles\"><a class=\"markdownIt-Anchor\" href=\"#官方文档解决属性erroronduplicatepublishoutputfiles\">#</a> 官方文档解决属性<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vZG90bmV0L2NvcmUvcHJvamVjdC1zZGsvbXNidWlsZC1wcm9wcyNlcnJvcm9uZHVwbGljYXRlcHVibGlzaG91dHB1dGZpbGVz\"> ErrorOnDuplicatePublishOutputFiles</span></h3>\n<h3 id=\"erroronduplicatepublishoutputfiles-属性与当-msbuild-在发布输出中检测到重复文件时-sdk-是否生成错误-netsdk1148-有关但无法确定要删除的文件-如果不希望生成错误请将-erroronduplicatepublishoutputfiles-属性设置为-false\"><a class=\"markdownIt-Anchor\" href=\"#erroronduplicatepublishoutputfiles-属性与当-msbuild-在发布输出中检测到重复文件时-sdk-是否生成错误-netsdk1148-有关但无法确定要删除的文件-如果不希望生成错误请将-erroronduplicatepublishoutputfiles-属性设置为-false\">#</a> ErrorOnDuplicatePublishOutputFiles 属性与当 MSBuild 在发布输出中检测到重复文件时 SDK 是否生成错误 NETSDK1148 有关，但无法确定要删除的文件。 如果不希望生成错误，请将 ErrorOnDuplicatePublishOutputFiles 属性设置为 false</h3>\n<h3 id=\"解决方法在指定项目的csproj文件内加上如下代码\"><a class=\"markdownIt-Anchor\" href=\"#解决方法在指定项目的csproj文件内加上如下代码\">#</a> 解决方法：在指定项目的 csproj 文件内加上如下代码</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>PropertyGroup<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">&lt;</span>ErrorOnDuplicatePublishOutputFiles<span class=\"token operator\">></span><span class=\"token boolean\">false</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ErrorOnDuplicatePublishOutputFiles<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>PropertyGroup<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"发布命令但是会替换所有文件\"><a class=\"markdownIt-Anchor\" href=\"#发布命令但是会替换所有文件\">#</a> 发布命令，但是会替换所有文件</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dotnet publish -c Release -o <span class=\"token string\">\"D:\\publish\"</span></pre></td></tr></table></figure><h3 id=\"如果在项目发布的时候不想替换配置文件例如appsettingsjson\"><a class=\"markdownIt-Anchor\" href=\"#如果在项目发布的时候不想替换配置文件例如appsettingsjson\">#</a> 如果在项目发布的时候不想替换配置文件例如 appsettings.json</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>ItemGroup<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token class-name\">Content</span> Update<span class=\"token operator\">=</span><span class=\"token string\">\"appsettings.json\"</span> CopyToPublishDirectory<span class=\"token operator\">=</span><span class=\"token string\">\"Never\"</span> Condition<span class=\"token operator\">=</span><span class=\"token string\">\"'$(Configuration)' == 'Release'\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ItemGroup<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"这句代码的意思是发布release环境不复制配置文件\"><a class=\"markdownIt-Anchor\" href=\"#这句代码的意思是发布release环境不复制配置文件\">#</a> 这句代码的意思是发布 Release 环境不复制配置文件</h3>\n<h3 id=\"copytopublishdirectory属性值\"><a class=\"markdownIt-Anchor\" href=\"#copytopublishdirectory属性值\">#</a> CopyToPublishDirectory 属性值</h3>\n<ul>\n<li>Never  从不复制</li>\n<li>Always 总是复制</li>\n<li>PreserveNewest 复制最新的</li>\n</ul>\n<h3 id=\"扩展知识如果项目包含第三方nuget包可以查看dotnet_nuget\"><a class=\"markdownIt-Anchor\" href=\"#扩展知识如果项目包含第三方nuget包可以查看dotnet_nuget\">#</a> 扩展知识：如果项目包含第三方 Nuget 包可以查看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vZG90bmV0L2NvcmUvdG9vbHMvZG90bmV0LW51Z2V0LWFkZC1zb3VyY2U=\"> DotNET_Nuget</span></h3>\n<ul>\n<li>将 myNuget 添加为源：</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dotnet nuget <span class=\"token function\">add</span> <span class=\"token builtin class-name\">source</span> 源链接 -n myNuget</pre></td></tr></table></figure><ul>\n<li>将 c:\\packages 添加为本地源：</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dotnet nuget <span class=\"token function\">add</span> <span class=\"token builtin class-name\">source</span> c:<span class=\"token punctuation\">\\</span>packages</pre></td></tr></table></figure><ul>\n<li>添加需要身份验证的源：</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dotnet nuget <span class=\"token function\">add</span> <span class=\"token builtin class-name\">source</span> 源链接 -n 自定义源名称 -u 账号 -p 密码 --store-password-in-clear-text</pre></td></tr></table></figure>",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/DotNET6_Jenkins_Gitblit/",
            "url": "https://blog.lovetianci.cn/DotNET/DotNET6_Jenkins_Gitblit/",
            "title": "DotNET6集成Jenkins+GitBlit部署到IIS",
            "date_published": "2022-07-11T15:00:00.000Z",
            "content_html": "<h3 id=\"通过jenkins和gitblit联合完成半自动化部署\"><a class=\"markdownIt-Anchor\" href=\"#通过jenkins和gitblit联合完成半自动化部署\">#</a> 通过 Jenkins 和 GitBlit 联合完成半自动化部署</h3>\n<a id=\"more\"></a>\n<h3 id=\"服务器需要安装相应的环境\"><a class=\"markdownIt-Anchor\" href=\"#服务器需要安装相应的环境\">#</a> 服务器需要安装相应的环境</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dpdC1mb3Itd2luZG93cy9naXQvcmVsZWFzZXMvZG93bmxvYWQvdjIuMzcuMC53aW5kb3dzLjEvR2l0LTIuMzcuMC02NC1iaXQuZXhl\">Git 环境</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC52aXN1YWxzdHVkaW8ubWljcm9zb2Z0LmNvbS9kb3dubG9hZC9wci8wZDAwMGQxYi04OWE0LTQ1OTMtOTcwOC1lYjUxNzc3NzdjNjQvY2ZiM2Q3NDQ0N2FjNzhkZWZiMWI2NmZkOWIzZjM4ZTAvZG90bmV0LWhvc3RpbmctNi4wLjYtd2luLmV4ZQ==\"> DotNET6 运行时环境</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC52aXN1YWxzdHVkaW8ubWljcm9zb2Z0LmNvbS9kb3dubG9hZC9wci8xNWFiNzcyZC1jZTVjLTQ2ZTUtYTkwZS01N2RmMTFhZGFiZmIvNGIxYjEzMzBiNjI3OWE1MGMzOThmOTRjZjcxNmM3MWUvZG90bmV0LXNkay02LjAuMzAxLXdpbi14NjQuZXhl\"> DotNET6 编译环境 SDK</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZXBvLmh1YXdlaWNsb3VkLmNvbS9qYXZhL2pkay8xMS4wLjIrOS9qZGstMTEuMC4yX3dpbmRvd3MteDY0X2Jpbi5leGU=\">JDK11</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2plbmtpbnMvd2luZG93cy8yLjM1OC9qZW5raW5zLm1zaQ==\">Jenkins 安装包</span></p>\n<h3 id=\"首先打开教程安装gitblit并配置java环境\"><a class=\"markdownIt-Anchor\" href=\"#首先打开教程安装gitblit并配置java环境\">#</a> 首先打开教程<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sb3ZldGlhbmNpLmNuL090aGVyL0dpdEJsaXRfV2luZG93czEwLw==\">安装 GitBlit</span> 并配置 Java 环境</h3>\n<h3 id=\"安装dotnet6运行时环境和sdk并安装git\"><a class=\"markdownIt-Anchor\" href=\"#安装dotnet6运行时环境和sdk并安装git\">#</a> 安装 DotNET6 运行时环境和 SDK，并安装 Git</h3>\n<h3 id=\"通过官方安装jenkins流程进行安装\"><a class=\"markdownIt-Anchor\" href=\"#通过官方安装jenkins流程进行安装\">#</a> 通过官方<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamVua2lucy5pby9kb2MvYm9vay9pbnN0YWxsaW5nL3dpbmRvd3Mv\">安装 Jenkins</span> 流程进行安装</h3>\n<h3 id=\"所有环境搭建完毕访问所配置的端口进入jenkins安装系统推荐插件进入系统并修改管理员密码\"><a class=\"markdownIt-Anchor\" href=\"#所有环境搭建完毕访问所配置的端口进入jenkins安装系统推荐插件进入系统并修改管理员密码\">#</a> 所有环境搭建完毕访问所配置的端口进入 Jenkins 安装系统推荐插件，进入系统并修改管理员密码</h3>\n<h3 id=\"新建项目选择freestyle-project\"><a class=\"markdownIt-Anchor\" href=\"#新建项目选择freestyle-project\">#</a> 新建项目，选择 Freestyle project</h3>\n<p><img data-src=\"CreateProject.png\" alt=\"创建项目\"></p>\n<h3 id=\"选择源码管理git输入git仓库地址并设置分支\"><a class=\"markdownIt-Anchor\" href=\"#选择源码管理git输入git仓库地址并设置分支\">#</a> 选择源码管理 Git 输入 Git 仓库地址并设置分支</h3>\n<h3 id=\"因为gitblit和jenkins都是在同一服务器所以我用私网ip\"><a class=\"markdownIt-Anchor\" href=\"#因为gitblit和jenkins都是在同一服务器所以我用私网ip\">#</a> 因为 GitBlit 和 Jenkins 都是在同一服务器所以我用私网 IP</h3>\n<p><img data-src=\"GitSetting.png\" alt=\"仓库地址及分支\"></p>\n<h3 id=\"创建credentials也就是git用户信息不然无法拉取代码只需要填写账号和密码\"><a class=\"markdownIt-Anchor\" href=\"#创建credentials也就是git用户信息不然无法拉取代码只需要填写账号和密码\">#</a> 创建 Credentials 也就是 Git 用户信息不然无法拉取代码（只需要填写账号和密码）</h3>\n<p><img data-src=\"UserSetting.png\" alt=\"Git用户信息配置\"></p>\n<h3 id=\"拉到倒数第二个构建选择执行windows-cmd命令\"><a class=\"markdownIt-Anchor\" href=\"#拉到倒数第二个构建选择执行windows-cmd命令\">#</a> 拉到倒数第二个构建，选择执行 Windows cmd 命令</h3>\n<p><img data-src=\"cmd.png\" alt=\"执行脚本命令\"></p>\n<h3 id=\"输入以下命令\"><a class=\"markdownIt-Anchor\" href=\"#输入以下命令\">#</a> 输入以下命令</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dotnet restore --还原</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dotnet build --编译</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>C:<span class=\"token punctuation\">\\</span>Windows<span class=\"token punctuation\">\\</span>System32<span class=\"token punctuation\">\\</span>inetsrv<span class=\"token punctuation\">\\</span>appcmd.exe stop site <span class=\"token string\">\"DotNET6API\"</span> --停止IIS中的指定网站</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>C:<span class=\"token punctuation\">\\</span>Windows<span class=\"token punctuation\">\\</span>System32<span class=\"token punctuation\">\\</span>inetsrv<span class=\"token punctuation\">\\</span>appcmd.exe stop apppool /apppool.name:<span class=\"token string\">\"DotNET6API\"</span> --停止IIS中的指定应用程序池</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>dotnet publish -o <span class=\"token string\">\"C:\\WebFile\\DotNET6API\"</span> --将编译文件发布到指定目录下</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>C:<span class=\"token punctuation\">\\</span>Windows<span class=\"token punctuation\">\\</span>System32<span class=\"token punctuation\">\\</span>inetsrv<span class=\"token punctuation\">\\</span>appcmd.exe start site <span class=\"token string\">\"DotNET6API\"</span> --启动IIS中的指定网站</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>C:<span class=\"token punctuation\">\\</span>Windows<span class=\"token punctuation\">\\</span>System32<span class=\"token punctuation\">\\</span>inetsrv<span class=\"token punctuation\">\\</span>appcmd.exe start apppool /apppool.name:<span class=\"token string\">\"DotNET6API\"</span> --启动IIS中的指定应用程序池</pre></td></tr></table></figure><h3 id=\"配置完成点击构建即可看到完成状态\"><a class=\"markdownIt-Anchor\" href=\"#配置完成点击构建即可看到完成状态\">#</a> 配置完成点击构建即可看到完成状态</h3>\n<p><img data-src=\"BuildSuccess.png\" alt=\"构建项目\"></p>\n<h3 id=\"注意事项如果git报错failed-to-connect-to-repository-error-performing-command-gitexe-ls-remote-h-xxxxxxx-head\"><a class=\"markdownIt-Anchor\" href=\"#注意事项如果git报错failed-to-connect-to-repository-error-performing-command-gitexe-ls-remote-h-xxxxxxx-head\">#</a> 注意事项（如果 Git 报错：Failed to connect to repository : Error performing command: git.exe ls-remote -h xxxxxxx HEAD）</h3>\n<h3 id=\"说明gitexe找不到对应地址需要将git绝对路径进行修改输入服务器git安装地址默认在c盘program-files文件夹下\"><a class=\"markdownIt-Anchor\" href=\"#说明gitexe找不到对应地址需要将git绝对路径进行修改输入服务器git安装地址默认在c盘program-files文件夹下\">#</a> 说明 Git.exe 找不到对应地址，需要将 Git 绝对路径进行修改（输入服务器 Git 安装地址默认在 C 盘 Program Files 文件夹下）</h3>\n<p><img data-src=\"GitUrl1.png\" alt=\"Git地址配置\"><br>\n<img data-src=\"GitUrl2.png\" alt=\"Git地址配置\"></p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/DotNET6_IIS/",
            "url": "https://blog.lovetianci.cn/DotNET/DotNET6_IIS/",
            "title": ".NET6 部署IIS",
            "date_published": "2022-07-08T17:00:00.000Z",
            "content_html": "<h2 id=\"net6部署iis必要操作\"><a class=\"markdownIt-Anchor\" href=\"#net6部署iis必要操作\">#</a> .NET6 部署 IIS 必要操作</h2>\n<a id=\"more\"></a>\n<h3 id=\"vs2022发布项目到文件夹然后拷贝到服务器\"><a class=\"markdownIt-Anchor\" href=\"#vs2022发布项目到文件夹然后拷贝到服务器\">#</a> VS2022 发布项目到文件夹，然后拷贝到服务器</h3>\n<h3 id=\"安装dotnet6运行时环境\"><a class=\"markdownIt-Anchor\" href=\"#安装dotnet6运行时环境\">#</a> 安装 DotNET6 运行时环境</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC52aXN1YWxzdHVkaW8ubWljcm9zb2Z0LmNvbS9kb3dubG9hZC9wci8wZDAwMGQxYi04OWE0LTQ1OTMtOTcwOC1lYjUxNzc3NzdjNjQvY2ZiM2Q3NDQ0N2FjNzhkZWZiMWI2NmZkOWIzZjM4ZTAvZG90bmV0LWhvc3RpbmctNi4wLjYtd2luLmV4ZQ==\">点击下载：dotnet-hosting-6.0.6-win.exe</span></p>\n<h3 id=\"配置program中的swagger\"><a class=\"markdownIt-Anchor\" href=\"#配置program中的swagger\">#</a> 配置 Program 中的 Swagger</h3>\n<h3 id=\"将开发模式开启改为默认开启\"><a class=\"markdownIt-Anchor\" href=\"#将开发模式开启改为默认开启\">#</a> 将开发模式开启改为默认开启</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 开发模式开启 Swagger</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//if (app.Environment.IsDevelopment())</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//    app.UseSwagger();</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//    app.UseSwaggerUI();</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">UseSwagger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">UseSwaggerUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"即可访问接口和swagger\"><a class=\"markdownIt-Anchor\" href=\"#即可访问接口和swagger\">#</a> 即可访问接口和 Swagger</h3>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/DotNET6_WebAPI_SqlSugar/",
            "url": "https://blog.lovetianci.cn/DotNET/DotNET6_WebAPI_SqlSugar/",
            "title": "DotNET6使用SqlSugar连接数据库",
            "date_published": "2022-07-06T16:00:00.000Z",
            "content_html": "<h3 id=\"dotnet6-多数据库配置\"><a class=\"markdownIt-Anchor\" href=\"#dotnet6-多数据库配置\">#</a> DotNET6 多数据库配置</h3>\n<a id=\"more\"></a>\n<h3 id=\"首先连接sql-server只需要安装sqlsugarcore包就可以了\"><a class=\"markdownIt-Anchor\" href=\"#首先连接sql-server只需要安装sqlsugarcore包就可以了\">#</a> 首先连接 SQL Server 只需要安装 SqlSugarCore 包就可以了</h3>\n<h3 id=\"数据库上下文类\"><a class=\"markdownIt-Anchor\" href=\"#数据库上下文类\">#</a> 数据库上下文类</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 数据库上下文类</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SqlSugarContext</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// 连接字符串</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">?</span></span> ConnectionString <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">/// 获取连接实例</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">SqlSugarClient</span> <span class=\"token function\">GetInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> db <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlSugarClient</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ConnectionConfig</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            ConnectionString <span class=\"token operator\">=</span> ConnectionString<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            DbType <span class=\"token operator\">=</span> DbType<span class=\"token punctuation\">.</span>SqlServer<span class=\"token punctuation\">,</span><span class=\"token comment\">// 切换数据库类型</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            IsAutoCloseConnection <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 自动释放数据务，如果存在事务，在事务结束后释放</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            InitKeyType <span class=\"token operator\">=</span> InitKeyType<span class=\"token punctuation\">.</span>Attribute<span class=\"token comment\">// 从实体特性中读取主键自增列信息</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> db<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"连接字符串配置\"><a class=\"markdownIt-Anchor\" href=\"#连接字符串配置\">#</a> 连接字符串配置</h3>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"ConnectionStrings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 本地 MySQL</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"MySQLConnection\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"server=127.0.0.1;uid=用户名;pwd=密码;port=3306;database=数据库名称;SslMode=None\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 本地 SQL Server</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"SQLServerConnection\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Data Source=.;Initial Catalog=数据库名称;uid=用户名;pwd=密码;Pooling=true;\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"program赋值连接字符串\"><a class=\"markdownIt-Anchor\" href=\"#program赋值连接字符串\">#</a> Program 赋值连接字符串</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 连接字符串</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>SqlSugarContext<span class=\"token punctuation\">.</span>ConnectionString <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span>Configuration<span class=\"token punctuation\">.</span><span class=\"token function\">GetConnectionString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SQLServerConnection\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"这样就可以直接使用了\"><a class=\"markdownIt-Anchor\" href=\"#这样就可以直接使用了\">#</a> 这样就可以直接使用了</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> db <span class=\"token operator\">=</span> SqlSugarContext<span class=\"token punctuation\">.</span><span class=\"token function\">GetInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> db <span class=\"token operator\">=</span> SqlSugarContext<span class=\"token punctuation\">.</span><span class=\"token function\">GetInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 如果不存在创建数据库存在不会重复创建 </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    db<span class=\"token punctuation\">.</span>DbMaintenance<span class=\"token punctuation\">.</span><span class=\"token function\">CreateDatabase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 注意 ：Oracle 和个别国产库需不支持该方法，需要手动建库 </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 创建表根据实体类 CodeFirstTable1     </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    db<span class=\"token punctuation\">.</span>CodeFirst<span class=\"token punctuation\">.</span><span class=\"token function\">InitTables</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">MenuInfo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 这样一个表就能成功创建了</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"mysql则需要多安装一个nuget包mysqldata\"><a class=\"markdownIt-Anchor\" href=\"#mysql则需要多安装一个nuget包mysqldata\">#</a> MySQL 则需要多安装一个 nuget 包：MySql.Data</h3>\n<h3 id=\"修改连接字符串为mysql连接\"><a class=\"markdownIt-Anchor\" href=\"#修改连接字符串为mysql连接\">#</a> 修改连接字符串为 MySQL 连接</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>SqlSugarContext<span class=\"token punctuation\">.</span>ConnectionString <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span>Configuration<span class=\"token punctuation\">.</span><span class=\"token function\">GetConnectionString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MySQLConnection\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"修改上下文类sqlsugarcontext中的dbtype为mysql即可切换数据库\"><a class=\"markdownIt-Anchor\" href=\"#修改上下文类sqlsugarcontext中的dbtype为mysql即可切换数据库\">#</a> 修改上下文类 SqlSugarContext 中的 DbType 为 Mysql 即可切换数据库</h3>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/DotNET6_WebAPI_IOC/",
            "url": "https://blog.lovetianci.cn/DotNET/DotNET6_WebAPI_IOC/",
            "title": "DotNET6 自动注入到IOC容器",
            "date_published": "2022-07-05T16:00:00.000Z",
            "content_html": "<h3 id=\"在开发过程中手动注入接口和实现很麻烦而且代码很冗余\"><a class=\"markdownIt-Anchor\" href=\"#在开发过程中手动注入接口和实现很麻烦而且代码很冗余\">#</a> 在开发过程中手动注入接口和实现很麻烦而且代码很冗余</h3>\n<a id=\"more\"></a>\n<h3 id=\"所以需要整一个自动注入的方法解放双手\"><a class=\"markdownIt-Anchor\" href=\"#所以需要整一个自动注入的方法解放双手\">#</a> 所以需要整一个自动注入的方法解放双手</h3>\n<h3 id=\"需要定义一个注入类型的枚举\"><a class=\"markdownIt-Anchor\" href=\"#需要定义一个注入类型的枚举\">#</a> 需要定义一个注入类型的枚举</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 注入类型</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">InjectType</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 作用域</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Scope<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 单例</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    Single<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 瞬时</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    Transient</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"定义一个attribute\"><a class=\"markdownIt-Anchor\" href=\"#定义一个attribute\">#</a> 定义一个 Attribute</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">AttributeUsage</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>AttributeTargets<span class=\"token punctuation\">.</span>Class<span class=\"token punctuation\">,</span> AllowMultiple <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AutoInjectAttribute</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Attribute</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token function\">AutoInjectAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Type</span> interfaceType<span class=\"token punctuation\">,</span> <span class=\"token class-name\">InjectType</span> injectType<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        Type <span class=\"token operator\">=</span> interfaceType<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        InjectType <span class=\"token operator\">=</span> injectType<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Type</span> Type <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">/// 注入类型</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">InjectType</span> InjectType <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"自动依赖注入的方法\"><a class=\"markdownIt-Anchor\" href=\"#自动依赖注入的方法\">#</a> 自动依赖注入的方法</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 自动依赖注入</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AutoInject</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// 自动注入所有的程序集有 InjectAttribute 标签</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// &lt;param name=\"serviceCollection\">&lt;/param></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">IServiceCollection</span> <span class=\"token function\">AddAutoDi</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">IServiceCollection</span> serviceCollection<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> path <span class=\"token operator\">=</span> AppDomain<span class=\"token punctuation\">.</span>CurrentDomain<span class=\"token punctuation\">.</span>BaseDirectory<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> assemblies <span class=\"token operator\">=</span> Directory<span class=\"token punctuation\">.</span><span class=\"token function\">GetFiles</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"*.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Select</span><span class=\"token punctuation\">(</span>Assembly<span class=\"token punctuation\">.</span>LoadFrom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> assembly <span class=\"token keyword\">in</span> assemblies<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> types <span class=\"token operator\">=</span> assembly<span class=\"token punctuation\">.</span><span class=\"token function\">GetTypes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=></span> a<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetCustomAttribute</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AutoInjectAttribute<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>types<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> type <span class=\"token keyword\">in</span> types<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> attr <span class=\"token operator\">=</span> type<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetCustomAttribute</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AutoInjectAttribute<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attr<span class=\"token punctuation\">?.</span>Type <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>attr<span class=\"token punctuation\">.</span>InjectType<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    <span class=\"token keyword\">case</span> InjectType<span class=\"token punctuation\">.</span>Scope<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                        serviceCollection<span class=\"token punctuation\">.</span><span class=\"token function\">AddScoped</span><span class=\"token punctuation\">(</span>attr<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token keyword\">case</span> InjectType<span class=\"token punctuation\">.</span>Single<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                        serviceCollection<span class=\"token punctuation\">.</span><span class=\"token function\">AddSingleton</span><span class=\"token punctuation\">(</span>attr<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token keyword\">case</span> InjectType<span class=\"token punctuation\">.</span>Transient<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                        serviceCollection<span class=\"token punctuation\">.</span><span class=\"token function\">AddTransient</span><span class=\"token punctuation\">(</span>attr<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ArgumentOutOfRangeException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">return</span> serviceCollection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"实现层和接口层\"><a class=\"markdownIt-Anchor\" href=\"#实现层和接口层\">#</a> 实现层和接口层</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 实现层调用特性</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token function\">AutoInject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">IHomeDataService</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> InjectType<span class=\"token punctuation\">.</span>Scope<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HomeDataService</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IHomeDataService</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">/// 接口层不需要做任何处理</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHomeDataService</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"program注册到服务\"><a class=\"markdownIt-Anchor\" href=\"#program注册到服务\">#</a> Program 注册到服务</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> builder <span class=\"token operator\">=</span> WebApplication<span class=\"token punctuation\">.</span><span class=\"token function\">CreateBuilder</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 自动注入</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>builder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token function\">AddAutoDi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"即可完成自动注入\"><a class=\"markdownIt-Anchor\" href=\"#即可完成自动注入\">#</a> 即可完成自动注入</h3>\n<h3 id=\"第二种方法扩展性更高先定义三个接口对应三个生命周期\"><a class=\"markdownIt-Anchor\" href=\"#第二种方法扩展性更高先定义三个接口对应三个生命周期\">#</a> 第二种方法扩展性更高，先定义三个接口对应三个生命周期</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 单例</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ISingleton</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 瞬时</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ITransient</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 作用域</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IScoped</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"自动注入的方法\"><a class=\"markdownIt-Anchor\" href=\"#自动注入的方法\">#</a> 自动注入的方法</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 自动注入</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AutoDI</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// 注入数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// &lt;param name=\"services\">&lt;/param></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">IServiceCollection</span> <span class=\"token function\">AddDataService</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">IServiceCollection</span> services<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> singletonType <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">ISingleton</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 单例</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> transientType <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">ITransient</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 瞬时</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> scopedType <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">IScoped</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 作用域</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 获取实现了三个生命周期接口的程序集</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> allTypes <span class=\"token operator\">=</span> AppDomain<span class=\"token punctuation\">.</span>CurrentDomain<span class=\"token punctuation\">.</span><span class=\"token function\">GetAssemblies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">SelectMany</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=></span> a<span class=\"token punctuation\">.</span><span class=\"token function\">GetTypes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=></span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            t<span class=\"token punctuation\">.</span><span class=\"token function\">GetInterfaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>transientType<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            t<span class=\"token punctuation\">.</span><span class=\"token function\">GetInterfaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>singletonType<span class=\"token punctuation\">)</span><span class=\"token operator\">||</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            t<span class=\"token punctuation\">.</span><span class=\"token function\">GetInterfaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>scopedType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">//class 的程序集</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> implementTypes <span class=\"token operator\">=</span> allTypes<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>IsClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 接口的程序集</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> interfaceTypes <span class=\"token operator\">=</span> allTypes<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>IsInterface<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> implementType <span class=\"token keyword\">in</span> implementTypes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> interfaceType <span class=\"token operator\">=</span> interfaceTypes<span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span><span class=\"token function\">IsAssignableFrom</span><span class=\"token punctuation\">(</span>implementType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token comment\">//class 有接口，用接口注入</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>interfaceType <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token comment\">// 判断用什么方式注入</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>interfaceType<span class=\"token punctuation\">.</span><span class=\"token function\">GetInterfaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>singletonType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    <span class=\"token comment\">// 单例</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                    services<span class=\"token punctuation\">.</span><span class=\"token function\">AddSingleton</span><span class=\"token punctuation\">(</span>interfaceType<span class=\"token punctuation\">,</span> implementType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>interfaceType<span class=\"token punctuation\">.</span><span class=\"token function\">GetInterfaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>transientType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                    <span class=\"token comment\">// 瞬时</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                    services<span class=\"token punctuation\">.</span><span class=\"token function\">AddTransient</span><span class=\"token punctuation\">(</span>interfaceType<span class=\"token punctuation\">,</span> implementType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>interfaceType<span class=\"token punctuation\">.</span><span class=\"token function\">GetInterfaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>scopedType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                    <span class=\"token comment\">// 作用域</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                    services<span class=\"token punctuation\">.</span><span class=\"token function\">AddScoped</span><span class=\"token punctuation\">(</span>interfaceType<span class=\"token punctuation\">,</span> implementType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token comment\">//class 没有接口，直接注入 class</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token comment\">// 判断用什么方式注入</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>implementType<span class=\"token punctuation\">.</span><span class=\"token function\">GetInterfaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>singletonType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                    <span class=\"token comment\">// 单例</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                    services<span class=\"token punctuation\">.</span><span class=\"token function\">AddSingleton</span><span class=\"token punctuation\">(</span>implementType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>implementType<span class=\"token punctuation\">.</span><span class=\"token function\">GetInterfaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>transientType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                    <span class=\"token comment\">// 瞬时</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    services<span class=\"token punctuation\">.</span><span class=\"token function\">AddTransient</span><span class=\"token punctuation\">(</span>implementType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>implementType<span class=\"token punctuation\">.</span><span class=\"token function\">GetInterfaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>scopedType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                    <span class=\"token comment\">// 作用域</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                    services<span class=\"token punctuation\">.</span><span class=\"token function\">AddScoped</span><span class=\"token punctuation\">(</span>implementType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">return</span> services<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"program注册服务\"><a class=\"markdownIt-Anchor\" href=\"#program注册服务\">#</a> Program 注册服务</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 自动注入</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>AutoDI<span class=\"token punctuation\">.</span><span class=\"token function\">AddDataService</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"使用方法在需要使用的接口继承对应生命周期的接口即可\"><a class=\"markdownIt-Anchor\" href=\"#使用方法在需要使用的接口继承对应生命周期的接口即可\">#</a> 使用方法：在需要使用的接口继承对应生命周期的接口即可</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 实现层不做处理</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HomeDataService</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IHomeDataService</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">/// 接口层继承生命周期接口</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IHomeDataService</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ISingleton</span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/DotNET6_WebAPI_Exception/",
            "url": "https://blog.lovetianci.cn/DotNET/DotNET6_WebAPI_Exception/",
            "title": "DotNET6 WebAPI全局异常处理及拦截器",
            "date_published": "2022-07-05T15:00:00.000Z",
            "content_html": "<h2 id=\"记录一下dotnet6-webapi全局异常处理\"><a class=\"markdownIt-Anchor\" href=\"#记录一下dotnet6-webapi全局异常处理\">#</a> 记录一下 DotNET6 WebAPI 全局异常处理</h2>\n<a id=\"more\"></a>\n<h3 id=\"通常接口出现一些小错误页面会返回一堆看不懂的代码\"><a class=\"markdownIt-Anchor\" href=\"#通常接口出现一些小错误页面会返回一堆看不懂的代码\">#</a> 通常接口出现一些小错误，页面会返回一堆看不懂的代码</h3>\n<h3 id=\"这对于我们寻找错误并没有什么太大的帮助反而看着很难受\"><a class=\"markdownIt-Anchor\" href=\"#这对于我们寻找错误并没有什么太大的帮助反而看着很难受\">#</a> 这对于我们寻找错误并没有什么太大的帮助，反而看着很难受</h3>\n<p><img data-src=\"errormsg.png\" alt=\"错误信息\"></p>\n<h3 id=\"遇到这种情况我们可以写一个全局异常过滤器接口报错直接跳到过滤器\"><a class=\"markdownIt-Anchor\" href=\"#遇到这种情况我们可以写一个全局异常过滤器接口报错直接跳到过滤器\">#</a> 遇到这种情况我们可以写一个全局异常过滤器，接口报错直接跳到过滤器</h3>\n<h3 id=\"首先新建一个exceptionfilter类继承至exceptionfilterattribute\"><a class=\"markdownIt-Anchor\" href=\"#首先新建一个exceptionfilter类继承至exceptionfilterattribute\">#</a> 首先新建一个 ExceptionFilter 类，继承至 ExceptionFilterAttribute</h3>\n<h3 id=\"代码如下\"><a class=\"markdownIt-Anchor\" href=\"#代码如下\">#</a> 代码如下</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 全局异常过滤器</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExceptionFilter</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ExceptionFilterAttribute</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">ILogger<span class=\"token punctuation\">&lt;</span>ExceptionFilter<span class=\"token punctuation\">></span></span> _logger<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// 构造函数注入</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">/// &lt;param name=\"logger\">&lt;/param></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token function\">ExceptionFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ILogger<span class=\"token punctuation\">&lt;</span>ExceptionFilter<span class=\"token punctuation\">></span></span> logger<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        _logger <span class=\"token operator\">=</span> logger<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">/// 全局捕获异常方法</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">/// &lt;param name=\"context\">&lt;/param></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ExceptionContext</span> context<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>context<span class=\"token punctuation\">.</span>ExceptionHandled<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            context<span class=\"token punctuation\">.</span>Result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">JsonResult</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token punctuation\">&#123;</span> Code <span class=\"token operator\">=</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> Message <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span>Exception<span class=\"token punctuation\">.</span>Message<span class=\"token punctuation\">,</span> Data <span class=\"token operator\">=</span> <span class=\"token string\">\"接口发生错误\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> ActionRoute <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Microsoft<span class=\"token punctuation\">.</span>AspNetCore<span class=\"token punctuation\">.</span>Mvc<span class=\"token punctuation\">.</span>Controllers<span class=\"token punctuation\">.</span>ControllerActionDescriptor<span class=\"token punctuation\">)</span>context<span class=\"token punctuation\">.</span>ActionDescriptor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>DisplayName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            _logger<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请求路径：&#123;0&#125;，错误信息：&#123;1&#125;\"</span><span class=\"token punctuation\">,</span> ActionRoute<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span>Exception<span class=\"token punctuation\">.</span>Message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            context<span class=\"token punctuation\">.</span>ExceptionHandled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"请求拦截器\"><a class=\"markdownIt-Anchor\" href=\"#请求拦截器\">#</a> 请求拦截器</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 请求拦截器</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GlobalActionFilter</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IActionFilter</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">ILogger<span class=\"token punctuation\">&lt;</span>GlobalActionFilter<span class=\"token punctuation\">></span></span> _logger<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token function\">GlobalActionFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ILogger<span class=\"token punctuation\">&lt;</span>GlobalActionFilter<span class=\"token punctuation\">></span></span> logger<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        _logger <span class=\"token operator\">=</span> logger<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">/// 执行方法前</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/// &lt;param name=\"context\">&lt;/param></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnActionExecuting</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActionExecutingContext</span> context<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// 执行方法前先执行这</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        _logger<span class=\"token punctuation\">.</span><span class=\"token function\">LogInformation</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"执行前\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">/// 执行方法后</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">/// &lt;param name=\"context\">&lt;/param></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnActionExecuted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActionExecutedContext</span> context<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 执行方法后执行这</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        _logger<span class=\"token punctuation\">.</span><span class=\"token function\">LogInformation</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"执行后\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"然后在program类里面全局配置\"><a class=\"markdownIt-Anchor\" href=\"#然后在program类里面全局配置\">#</a> 然后在 Program 类里面全局配置</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> builder <span class=\"token operator\">=</span> WebApplication<span class=\"token punctuation\">.</span><span class=\"token function\">CreateBuilder</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 异常处理</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>builder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token function\">AddMvcCore</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 异常过滤器</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    options<span class=\"token punctuation\">.</span>Filters<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Add</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ExceptionFilter<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// Action 拦截器</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    options<span class=\"token punctuation\">.</span>Filters<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Add</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GlobalActionFilter<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddJsonOptions</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 配置 Json 序列化大小写处理</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    options<span class=\"token punctuation\">.</span>JsonSerializerOptions<span class=\"token punctuation\">.</span>PropertyNamingPolicy <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    options<span class=\"token punctuation\">.</span>JsonSerializerOptions<span class=\"token punctuation\">.</span>DictionaryKeyPolicy <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">// 解决中文被编码</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    options<span class=\"token punctuation\">.</span>JsonSerializerOptions<span class=\"token punctuation\">.</span>Encoder <span class=\"token operator\">=</span> JavaScriptEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>UnicodeRanges<span class=\"token punctuation\">.</span>All<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"backmsg.png\" alt=\"返回信息\"></p>\n<h3 id=\"接口异常就会返回错误信息供开发人员排查为了防止返回的json大小写不匹配我还加了json大小写处理确定json输出和后台定义的格式以及大小写一致和返回的中文乱码情况\"><a class=\"markdownIt-Anchor\" href=\"#接口异常就会返回错误信息供开发人员排查为了防止返回的json大小写不匹配我还加了json大小写处理确定json输出和后台定义的格式以及大小写一致和返回的中文乱码情况\">#</a> 接口异常就会返回错误信息供开发人员排查，为了防止返回的 Json 大小写不匹配，我还加了 Json 大小写处理，确定 Json 输出和后台定义的格式以及大小写一致，和返回的中文乱码情况</h3>\n<p><img data-src=\"error.png\" alt=\"异常分析\"></p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/DotNET6_WebAPI_Log4net/",
            "url": "https://blog.lovetianci.cn/DotNET/DotNET6_WebAPI_Log4net/",
            "title": "DotNET6集成Log4Net",
            "date_published": "2022-07-04T15:00:00.000Z",
            "content_html": "<h3 id=\"项目中常用的日志组件为log4net今天记录一下最简单集成log4net的方法\"><a class=\"markdownIt-Anchor\" href=\"#项目中常用的日志组件为log4net今天记录一下最简单集成log4net的方法\">#</a> 项目中常用的日志组件为 Log4Net，今天记录一下最简单集成 Log4Net 的方法</h3>\n<a id=\"more\"></a>\n<h3 id=\"准备工作\"><a class=\"markdownIt-Anchor\" href=\"#准备工作\">#</a> 准备工作：</h3>\n<ul>\n<li>创建 WebAPI 项目，这边使用的.NET6</li>\n<li>安装 Nuget 包：Microsoft.Extensions.Logging.Log4Net.AspNetCore</li>\n<li>添加 Log4net.Config 配置文件</li>\n</ul>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>log4net</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>RollingAppender<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log4net.Appender.RollingFileAppender<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">&lt;!-- 指定日志文件保存的目录 --></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>file</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log\\<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">&lt;!-- 追加日志内容 --></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appendToFile</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">&lt;!-- 可以为：Once|Size|Date|Composite--></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">&lt;!--Compoosite 为 Size 和 Date 的组合 --></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>rollingStyle</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Composite<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">&lt;!-- 设置为 true，当前最新日志文件名永远为 file 字节中的名字 --></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>staticLogFileName</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">&lt;!-- 当备份文件时，备份文件的名称及后缀名 --></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>datePattern</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yyyyMMdd<span class=\"token punctuation\">'</span>.log<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">&lt;!-- 日志最大个数 --></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">&lt;!--rollingStyle 节点为 Size 时，只能有 value 个日志 --></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">&lt;!--rollingStyle 节点为 Composie 时，每天有 value 个日志 --></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maxSizeRollBackups</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">&lt;!-- 可用的单位：KB|MB|GB--></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maximumFileSize</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5MB<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log4net.Filter.LevelRangeFilter<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LevelMin<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ALL<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LevelMax<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FATAL<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>layout</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log4net.Layout.PatternLayout<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>conversionPattern</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>%date [%thread] %-5level %logger [%property&#123;NDC&#125;] - %message%newline<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>layout</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>appender</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>root</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>priority</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ALL<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>level</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ALL<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>appender-ref</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>RollingAppender<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>root</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>log4net</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"在net6配置如下\"><a class=\"markdownIt-Anchor\" href=\"#在net6配置如下\">#</a> 在.NET6 配置如下</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> builder <span class=\"token operator\">=</span> WebApplication<span class=\"token punctuation\">.</span><span class=\"token function\">CreateBuilder</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 配置日志</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>builder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token function\">AddLogging</span><span class=\"token punctuation\">(</span>log <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    log<span class=\"token punctuation\">.</span><span class=\"token function\">AddLog4Net</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 默认的配置文件路径是在根目录，且文件名为 Log4Net.Config</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 如果文件路径或名称有变化，需要重新设置其路径或名称</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 比如在项目根目录下创建一个名为 config 的文件夹，将 Log4Net.Config 文件移入其中，并改名为 log.config</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 则需要使用下面的代码来进行配置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">//log.AddLog4Net(new Log4NetProviderOptions()</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">//&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">//    Log4NetConfigFileName = \"config/log.config\",</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">//    Watch = true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">//&#125;);</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"接下来就可以在控制器或者接口实现去使用构造函数注入了\"><a class=\"markdownIt-Anchor\" href=\"#接下来就可以在控制器或者接口实现去使用构造函数注入了\">#</a> 接下来就可以在控制器或者接口实现去使用构造函数注入了</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 控制器内使用</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">ILogger<span class=\"token punctuation\">&lt;</span>FileController<span class=\"token punctuation\">></span></span> _logger<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token function\">FileController</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ILogger<span class=\"token punctuation\">&lt;</span>FileController<span class=\"token punctuation\">></span></span> logger<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    _logger <span class=\"token operator\">=</span> logger<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    _logger<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is FileController Log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"运行即可看到项目生成目录多了一个log文件夹以及日志文件\"><a class=\"markdownIt-Anchor\" href=\"#运行即可看到项目生成目录多了一个log文件夹以及日志文件\">#</a> 运行即可看到项目生成目录多了一个 log 文件夹以及日志文件</h3>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/SqlSugar/",
            "url": "https://blog.lovetianci.cn/DotNET/SqlSugar/",
            "title": "SqlSugar的使用日常",
            "date_published": "2022-02-22T22:22:22.000Z",
            "content_html": "<h3 id=\"这两天从freesql转sqlsugar记录一些日常\"><a class=\"markdownIt-Anchor\" href=\"#这两天从freesql转sqlsugar记录一些日常\">#</a> 这两天从 FreeSql 转 SqlSugar，记录一些日常</h3>\n<a id=\"more\"></a>\n<h3 id=\"首先本地装了一个8028最新版本的mysql\"><a class=\"markdownIt-Anchor\" href=\"#首先本地装了一个8028最新版本的mysql\">#</a> 首先本地装了一个 8.0.28 最新版本的 MySQL</h3>\n<h3 id=\"然后项目中集成mysql和sqlsugar\"><a class=\"markdownIt-Anchor\" href=\"#然后项目中集成mysql和sqlsugar\">#</a> 然后项目中集成 MySQL 和 SqlSugar</h3>\n<p><img data-src=\"TianciAdminCode.png\" alt=\"项目结构\"></p>\n<h3 id=\"项目分层我是在放实体的datamodel层添加引用\"><a class=\"markdownIt-Anchor\" href=\"#项目分层我是在放实体的datamodel层添加引用\">#</a> 项目分层我是在放实体的 DataModel 层添加引用</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token class-name\">PackageReference</span> Include<span class=\"token operator\">=</span><span class=\"token string\">\"MySql.Data\"</span> Version<span class=\"token operator\">=</span><span class=\"token string\">\"8.0.28\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token class-name\">PackageReference</span> Include<span class=\"token operator\">=</span><span class=\"token string\">\"SqlSugarCore\"</span> Version<span class=\"token operator\">=</span><span class=\"token string\">\"5.0.5.4\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"然后处理代码逻辑是在dataservice层也就是接口实现所以在这层写上下文类\"><a class=\"markdownIt-Anchor\" href=\"#然后处理代码逻辑是在dataservice层也就是接口实现所以在这层写上下文类\">#</a> 然后处理代码逻辑是在 DataService 层，也就是接口实现，所以在这层写上下文类</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">SqlSugar</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">DataService</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// 数据库上下文类</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DbContext</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> ConnectionString <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">SqlSugarClient</span> <span class=\"token function\">GetInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> db <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlSugarClient</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ConnectionConfig</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                ConnectionString <span class=\"token operator\">=</span> ConnectionString<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                DbType <span class=\"token operator\">=</span> DbType<span class=\"token punctuation\">.</span>MySql<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                IsAutoCloseConnection <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 自动释放数据务，如果存在事务，在事务结束后释放</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                InitKeyType <span class=\"token operator\">=</span> InitKeyType<span class=\"token punctuation\">.</span>Attribute<span class=\"token comment\">// 从实体特性中读取主键自增列信息</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">return</span> db<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"在startup中configureservices里注入\"><a class=\"markdownIt-Anchor\" href=\"#在startup中configureservices里注入\">#</a> 在 Startup 中 ConfigureServices 里注入</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 连接 MySQL 数据库，添加数据库上下文</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>DataService<span class=\"token punctuation\">.</span>DbContext<span class=\"token punctuation\">.</span>ConnectionString <span class=\"token operator\">=</span> Configuration<span class=\"token punctuation\">.</span><span class=\"token function\">GetConnectionString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MySQLConnection\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"appsettingsjson添加本地数据库连接字符串\"><a class=\"markdownIt-Anchor\" href=\"#appsettingsjson添加本地数据库连接字符串\">#</a> appsettings.json 添加本地数据库连接字符串</h3>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"ConnectionStrings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"MySQLConnection\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"server=127.0.0.1;uid=root;pwd=123456;port=3306;database=world;SslMode=None\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"今天本打算写一个树形结构的菜单层级处理看到sqlsugar官方文档有自带的方法totree\"><a class=\"markdownIt-Anchor\" href=\"#今天本打算写一个树形结构的菜单层级处理看到sqlsugar官方文档有自带的方法totree\">#</a> 今天本打算写一个树形结构的菜单层级处理，看到 SqlSugar 官方文档有自带的方法 ToTree</h3>\n<h3 id=\"简单使用一下以下是数据库结构\"><a class=\"markdownIt-Anchor\" href=\"#简单使用一下以下是数据库结构\">#</a> 简单使用一下，以下是数据库结构</h3>\n<p><img data-src=\"Table.png\" alt=\"表结构\"></p>\n<h3 id=\"实体类数据代码\"><a class=\"markdownIt-Anchor\" href=\"#实体类数据代码\">#</a> 实体类数据代码</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">SqlSugar</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">DataModel<span class=\"token punctuation\">.</span>Table</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// 菜单表</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token function\">SugarTable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"menuinfo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MenuInfo</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">/// 主键</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">[</span><span class=\"token function\">SugarColumn</span><span class=\"token punctuation\">(</span>IsPrimaryKey <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> IsIdentity <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Id <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">/// 菜单名称</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary>           </span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> MenuName <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\">/// 父级 Id</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary>           </span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">?</span></span> ParentId <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">/// 不验证数据库，做树形结构使用</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">[</span>SqlSugar<span class=\"token punctuation\">.</span><span class=\"token function\">SugarColumn</span><span class=\"token punctuation\">(</span>IsIgnore <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>MenuInfo<span class=\"token punctuation\">></span></span> Child <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"示例代码\"><a class=\"markdownIt-Anchor\" href=\"#示例代码\">#</a> 示例代码</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> db <span class=\"token operator\">=</span> DbContext<span class=\"token punctuation\">.</span><span class=\"token function\">GetInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 首次连接数据库获取数据不计算在耗时之内</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    db<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Queryable</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MenuInfo<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToJson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//SqlSugar 自带树形结构</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">Stopwatch</span> sw <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Stopwatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    sw<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> tree <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Queryable</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MenuInfo<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToTree</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">=></span> s<span class=\"token punctuation\">.</span>Child<span class=\"token punctuation\">,</span> s <span class=\"token operator\">=></span> s<span class=\"token punctuation\">.</span>ParentId<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> json <span class=\"token operator\">=</span> JsonConvert<span class=\"token punctuation\">.</span><span class=\"token function\">SerializeObject</span><span class=\"token punctuation\">(</span>tree<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    sw<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">//Linq 自带 Foreach 实现递归遍历树形结构</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token class-name\">Stopwatch</span> sw2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Stopwatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    sw2<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> list <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Queryable</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MenuInfo<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    list<span class=\"token punctuation\">.</span><span class=\"token function\">ForEach</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">=></span> s<span class=\"token punctuation\">.</span>Child <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>ParentId <span class=\"token operator\">==</span> s<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> tree2 <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">?</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">=></span> s<span class=\"token punctuation\">.</span>ParentId <span class=\"token operator\">==</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">OrderBy</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">=></span> s<span class=\"token punctuation\">.</span>ParentId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ParentId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> json2 <span class=\"token operator\">=</span> JsonConvert<span class=\"token punctuation\">.</span><span class=\"token function\">SerializeObject</span><span class=\"token punctuation\">(</span>tree2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    sw2<span class=\"token punctuation\">.</span><span class=\"token function\">Stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    _logger<span class=\"token punctuation\">.</span><span class=\"token function\">LogInformation</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SqlSugar耗时：&#123;0&#125;ms，数据：&#123;1&#125;\"</span><span class=\"token punctuation\">,</span> sw<span class=\"token punctuation\">.</span>ElapsedTicks <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">decimal</span><span class=\"token punctuation\">)</span>Stopwatch<span class=\"token punctuation\">.</span>Frequency <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//SqlSugar</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    _logger<span class=\"token punctuation\">.</span><span class=\"token function\">LogInformation</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Linq Foreach耗时：&#123;0&#125;ms，数据：&#123;1&#125;\"</span><span class=\"token punctuation\">,</span> sw2<span class=\"token punctuation\">.</span>ElapsedTicks <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">decimal</span><span class=\"token punctuation\">)</span>Stopwatch<span class=\"token punctuation\">.</span>Frequency <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> json2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Linq Foreach</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">//SqlSugar 的性能没有 Linq Foreach 高</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"运行五次并打印日志\"><a class=\"markdownIt-Anchor\" href=\"#运行五次并打印日志\">#</a> 运行五次并打印日志</h3>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>SqlSugar耗时：<span class=\"token number\">14</span>.0168000ms</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Linq Foreach耗时：<span class=\"token number\">7</span>.8033000ms</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>SqlSugar耗时：<span class=\"token number\">1</span>.6285000ms</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Linq Foreach耗时：<span class=\"token number\">1</span>.0115000ms</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>SqlSugar耗时：<span class=\"token number\">0</span>.8813000ms</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Linq Foreach耗时：<span class=\"token number\">0</span>.7391000ms</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>SqlSugar耗时：<span class=\"token number\">4</span>.4206000ms</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Linq Foreach耗时：<span class=\"token number\">4</span>.1635000ms</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>SqlSugar耗时：<span class=\"token number\">1</span>.015000ms</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Linq Foreach耗时：<span class=\"token number\">0</span>.8329000ms</pre></td></tr></table></figure><h3 id=\"结论sqlsugar这个totree方法处理树形结构很方便但是实际性能foreach要好一丢丢\"><a class=\"markdownIt-Anchor\" href=\"#结论sqlsugar这个totree方法处理树形结构很方便但是实际性能foreach要好一丢丢\">#</a> 结论：SqlSugar 这个 ToTree 方法处理树形结构很方便，但是实际性能 Foreach 要好一丢丢</h3>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/PDF_Excel/",
            "url": "https://blog.lovetianci.cn/DotNET/PDF_Excel/",
            "title": ".NET Core导出PDF和Excel",
            "date_published": "2021-12-30T14:00:00.000Z",
            "content_html": "<h3 id=\"关于生成pdf和excel文件的最简单方法\"><a class=\"markdownIt-Anchor\" href=\"#关于生成pdf和excel文件的最简单方法\">#</a> 关于生成 PDF 和 Excel 文件的最简单方法</h3>\n<a id=\"more\"></a>\n<h3 id=\"导出excel需要导入epplus包\"><a class=\"markdownIt-Anchor\" href=\"#导出excel需要导入epplus包\">#</a> 导出 Excel 需要导入 EPPlus 包</h3>\n<h3 id=\"导入命名空间\"><a class=\"markdownIt-Anchor\" href=\"#导入命名空间\">#</a> 导入命名空间</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">OfficeOpenXml</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"示例代码如下\"><a class=\"markdownIt-Anchor\" href=\"#示例代码如下\">#</a> 示例代码如下</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 请求接口直接下载 Excel</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>HttpGet<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>IActionResult<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetExcel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> fileName <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Guid<span class=\"token punctuation\">.</span><span class=\"token function\">NewGuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.xlsx\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MemoryStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    ExcelPackage<span class=\"token punctuation\">.</span>LicenseContext <span class=\"token operator\">=</span> LicenseContext<span class=\"token punctuation\">.</span>NonCommercial<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ExcelPackage</span> package <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ExcelPackage</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 添加 worksheet</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">ExcelWorksheet</span> worksheet <span class=\"token operator\">=</span> package<span class=\"token punctuation\">.</span>Workbook<span class=\"token punctuation\">.</span>Worksheets<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DeliveryReceiptSignLog\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 添加头</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">//worksheet.Cells.Style.ShrinkToFit = true;// 单元格自动适应大小</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"跟踪码\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"收款金额\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"收款方式\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"POS流水号\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"终端号\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span><span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Width <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span><span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Width <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span><span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Width <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span><span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Width <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span><span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Width <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span><span class=\"token function\">Column</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Style<span class=\"token punctuation\">.</span>Numberformat<span class=\"token punctuation\">.</span>Format <span class=\"token operator\">=</span> <span class=\"token string\">\"￥#,##0.00\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 金额格式</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">// 从第二行第三列到第一万行第三列，三列被设置为下拉框</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> unitmeasure <span class=\"token operator\">=</span> worksheet<span class=\"token punctuation\">.</span>DataValidations<span class=\"token punctuation\">.</span><span class=\"token function\">AddListValidation</span><span class=\"token punctuation\">(</span>worksheet<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        unitmeasure<span class=\"token punctuation\">.</span>Formula<span class=\"token punctuation\">.</span>Values<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"现金\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        unitmeasure<span class=\"token punctuation\">.</span>Formula<span class=\"token punctuation\">.</span>Values<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"刷卡\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> rowCount <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 行</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> cellCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 列</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\">// 添加数据（循环可改为数据集）</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            rowCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            worksheet<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span>rowCount<span class=\"token punctuation\">,</span> <span class=\"token operator\">++</span>cellCount<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            worksheet<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span>rowCount<span class=\"token punctuation\">,</span> <span class=\"token operator\">++</span>cellCount<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            worksheet<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span>rowCount<span class=\"token punctuation\">,</span> <span class=\"token operator\">++</span>cellCount<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> unitmeasure<span class=\"token punctuation\">.</span>Formula<span class=\"token punctuation\">.</span>Values<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            worksheet<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span>rowCount<span class=\"token punctuation\">,</span> <span class=\"token operator\">++</span>cellCount<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            worksheet<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span>rowCount<span class=\"token punctuation\">,</span> <span class=\"token operator\">++</span>cellCount<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            cellCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 重置</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>IsProtected <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置是否进行锁定</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span><span class=\"token function\">SetPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置密码</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowAutoFilter <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 下面是一些锁定时权限的设置</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowDeleteColumns <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowDeleteRows <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowEditScenarios <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowEditObject <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowFormatCells <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowFormatColumns <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowFormatRows <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowInsertColumns <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowInsertHyperlinks <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowInsertRows <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowPivotTables <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowSelectLockedCells <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowSelectUnlockedCells <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        worksheet<span class=\"token punctuation\">.</span>Protection<span class=\"token punctuation\">.</span>AllowSort <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        package<span class=\"token punctuation\">.</span><span class=\"token function\">Save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    stream<span class=\"token punctuation\">.</span>Position <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">FromResult</span><span class=\"token punctuation\">(</span><span class=\"token function\">File</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"</span><span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"net-core导出pdf需要导入itextsharplgplv2core\"><a class=\"markdownIt-Anchor\" href=\"#net-core导出pdf需要导入itextsharplgplv2core\">#</a> .NET Core 导出 PDF 需要导入 iTextSharp.LGPLv2.Core</h3>\n<h3 id=\"导入命名空间-2\"><a class=\"markdownIt-Anchor\" href=\"#导入命名空间-2\">#</a> 导入命名空间</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">iTextSharp<span class=\"token punctuation\">.</span>text</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">iTextSharp<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>pdf</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"controller代码如下\"><a class=\"markdownIt-Anchor\" href=\"#controller代码如下\">#</a> Controller 代码如下</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 直接获取文件（PDF）</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>HttpGet<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>IActionResult<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetPDF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> fileName <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">Guid<span class=\"token punctuation\">.</span><span class=\"token function\">NewGuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.pdf\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">DataEntity</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    data<span class=\"token punctuation\">.</span>TaskName <span class=\"token operator\">=</span> <span class=\"token string\">\"SHXH0514huangjinjin05142020/09/14-3\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    data<span class=\"token punctuation\">.</span>SiteName <span class=\"token operator\">=</span> <span class=\"token string\">\"浦东配送站\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> users <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">User</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            Id<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            OrderNo<span class=\"token operator\">=</span><span class=\"token string\">\"200911SHDF01634290\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            Route<span class=\"token operator\">=</span><span class=\"token string\">\"SHXH10b\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            FromToTime<span class=\"token operator\">=</span><span class=\"token string\">\"2020-09-13 13:33:00 14:33:00\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            Address<span class=\"token operator\">=</span><span class=\"token string\">\"上海 上海市 黄浦区南京东路街道9999999999999\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            Remark<span class=\"token operator\">=</span><span class=\"token string\">\"（生日快乐）\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            Count<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            Amount<span class=\"token operator\">=</span><span class=\"token number\">0.01M</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">User</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            Id<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            OrderNo<span class=\"token operator\">=</span><span class=\"token string\">\"210831SHKF01938125\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            Route<span class=\"token operator\">=</span><span class=\"token string\">\"SHCN#2a\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            FromToTime<span class=\"token operator\">=</span><span class=\"token string\">\"2021-09-03 10:00:00 10:30:00\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            Address<span class=\"token operator\">=</span><span class=\"token string\">\"上海 上海市 徐汇区田林路140号\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            Remark<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            Count<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            Amount<span class=\"token operator\">=</span><span class=\"token number\">0.00M</span><span class=\"token operator\">+</span><span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    data<span class=\"token punctuation\">.</span>users <span class=\"token operator\">=</span> users<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>PDFHelper<span class=\"token punctuation\">.</span><span class=\"token function\">GetPDF</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Length<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MemoryStream</span><span class=\"token punctuation\">(</span>PDFHelper<span class=\"token punctuation\">.</span><span class=\"token function\">GetPDF</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">FromResult</span><span class=\"token punctuation\">(</span><span class=\"token function\">File</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/pdf\"</span><span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"pdfhelpergetpdf代码全篇\"><a class=\"markdownIt-Anchor\" href=\"#pdfhelpergetpdf代码全篇\">#</a> PDFHelper.GetPDF 代码全篇</h3>\n<h3 id=\"需导入命名空间\"><a class=\"markdownIt-Anchor\" href=\"#需导入命名空间\">#</a> 需导入命名空间</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">iTextSharp<span class=\"token punctuation\">.</span>text</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token namespace\">iTextSharp<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>pdf</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PDFHelper</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/// 返回字节</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;param name=\"data\">&lt;/param></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">GetPDF</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataEntity</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 生成 pdf</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">Document</span> document <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Document</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">//var fileStream = new MemoryStream();</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> fileName <span class=\"token operator\">=</span> <span class=\"token string\">\"测试.pdf\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> fileStream <span class=\"token operator\">=</span> File<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//C:\\\\Users\\\\Tianci\\\\Desktop\\\\PDF\\\\</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">PdfWriter</span> pw <span class=\"token operator\">=</span> PdfWriter<span class=\"token punctuation\">.</span><span class=\"token function\">GetInstance</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">,</span> fileStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        document<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 指定字体文件，IDENTITY_H：支持中文</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> fontpath <span class=\"token operator\">=</span> <span class=\"token string\">@\"C:\\Windows\\Fonts\\SIMHEI.TTF\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">BaseFont</span> customfont <span class=\"token operator\">=</span> BaseFont<span class=\"token punctuation\">.</span><span class=\"token function\">CreateFont</span><span class=\"token punctuation\">(</span>fontpath<span class=\"token punctuation\">,</span> BaseFont<span class=\"token punctuation\">.</span>IDENTITY_H<span class=\"token punctuation\">,</span> BaseFont<span class=\"token punctuation\">.</span>NOT_EMBEDDED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 设置字体颜色样式</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> baseFont <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Font</span><span class=\"token punctuation\">(</span>customfont<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\">//System.Drawing.Color.Black</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            Color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">BaseColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 设置字体颜色</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            Size <span class=\"token operator\">=</span> <span class=\"token number\">8</span>  <span class=\"token comment\">// 字体大小</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 头部</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 定义 table 行列数据</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">//PdfPTable tableRow_1 = new PdfPTable (1);  // 生成只有一列的行数据</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">//tableRow_1.DefaultCell.Border = Rectangle.NO_BORDER;  // 无边框</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\">//tableRow_1.WidthPercentage = 100;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token comment\">//tableRow_1.DefaultCell.MinimumHeight = 80f; // 高度</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\">//float [] headWidths_1 = new float [] &#123; 3000f &#125;; // 宽度</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\">//tableRow_1.SetWidths(headWidths_1);</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\">// 定义字体样式</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> headerStyle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Font</span><span class=\"token punctuation\">(</span>customfont<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            Color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">BaseColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//System.Drawing.Color.Black</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            Size <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token comment\">//var Row_1_Cell_1 = new PdfPCell (new Paragraph (\"配送任务单\", headerStyle));</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\">//Row_1_Cell_1.HorizontalAlignment = Element.ALIGN_CENTER;// 居中</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\">//tableRow_1.AddCell(Row_1_Cell_1);</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> head <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Paragraph</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"配送任务单\"</span><span class=\"token punctuation\">,</span> headerStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        head<span class=\"token punctuation\">.</span>IndentationLeft <span class=\"token operator\">=</span> <span class=\"token number\">200f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> headerStyle2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Font</span><span class=\"token punctuation\">(</span>customfont<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            Color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">BaseColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//System.Drawing.Color.Black</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            Size <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> para <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Paragraph</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"任务名称：&#123;0&#125;            站点：&#123;1&#125;\"</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span>TaskName<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span>SiteName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> headerStyle2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        para<span class=\"token punctuation\">.</span>IndentationLeft <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">30f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> placeholder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Paragraph</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"   \"</span><span class=\"token punctuation\">,</span> headerStyle2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 上方文字与表格相隔间距</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token class-name\">PdfPTable</span> tableRow_2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PdfPTable</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        tableRow_2<span class=\"token punctuation\">.</span>TotalWidth <span class=\"token operator\">=</span> <span class=\"token number\">580f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        tableRow_2<span class=\"token punctuation\">.</span>LockedWidth <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        tableRow_2<span class=\"token punctuation\">.</span>DefaultCell<span class=\"token punctuation\">.</span>Border <span class=\"token operator\">=</span> Rectangle<span class=\"token punctuation\">.</span>NO_BORDER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        tableRow_2<span class=\"token punctuation\">.</span>WidthPercentage <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        tableRow_2<span class=\"token punctuation\">.</span>DefaultCell<span class=\"token punctuation\">.</span>MinimumHeight <span class=\"token operator\">=</span> <span class=\"token number\">80f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token comment\">//float[] headWidths_2 = new float[] &#123; 100f, 300f, 120f, 300f, 540f, 300f, 100f, 200f &#125;;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">float</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> headWidths_2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">float</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">50f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">220f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">140f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70f</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 搭配 TotalWidth 和 LockedWidth 使用</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        tableRow_2<span class=\"token punctuation\">.</span><span class=\"token function\">SetWidths</span><span class=\"token punctuation\">(</span>headWidths_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Row_2_Cell_1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PdfPCell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Paragraph</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"序号\"</span><span class=\"token punctuation\">,</span> baseFont<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        Row_2_Cell_1<span class=\"token punctuation\">.</span>HorizontalAlignment <span class=\"token operator\">=</span> Element<span class=\"token punctuation\">.</span>ALIGN_CENTER<span class=\"token punctuation\">;</span><span class=\"token comment\">// 文字居中</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        Row_2_Cell_1<span class=\"token punctuation\">.</span>BackgroundColor <span class=\"token operator\">=</span> BaseColor<span class=\"token punctuation\">.</span>LightGray<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        tableRow_2<span class=\"token punctuation\">.</span><span class=\"token function\">AddCell</span><span class=\"token punctuation\">(</span>Row_2_Cell_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Row_2_Cell_2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PdfPCell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Paragraph</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"跟踪代码\"</span><span class=\"token punctuation\">,</span> baseFont<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        Row_2_Cell_2<span class=\"token punctuation\">.</span>HorizontalAlignment <span class=\"token operator\">=</span> Element<span class=\"token punctuation\">.</span>ALIGN_CENTER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        Row_2_Cell_2<span class=\"token punctuation\">.</span>BackgroundColor <span class=\"token operator\">=</span> BaseColor<span class=\"token punctuation\">.</span>LightGray<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        tableRow_2<span class=\"token punctuation\">.</span><span class=\"token function\">AddCell</span><span class=\"token punctuation\">(</span>Row_2_Cell_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Row_2_Cell_3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PdfPCell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Paragraph</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"线路\"</span><span class=\"token punctuation\">,</span> baseFont<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        Row_2_Cell_3<span class=\"token punctuation\">.</span>HorizontalAlignment <span class=\"token operator\">=</span> Element<span class=\"token punctuation\">.</span>ALIGN_CENTER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        Row_2_Cell_3<span class=\"token punctuation\">.</span>BackgroundColor <span class=\"token operator\">=</span> BaseColor<span class=\"token punctuation\">.</span>LightGray<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        tableRow_2<span class=\"token punctuation\">.</span><span class=\"token function\">AddCell</span><span class=\"token punctuation\">(</span>Row_2_Cell_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Row_2_Cell_4 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PdfPCell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Paragraph</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"配送时间\"</span><span class=\"token punctuation\">,</span> baseFont<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        Row_2_Cell_4<span class=\"token punctuation\">.</span>HorizontalAlignment <span class=\"token operator\">=</span> Element<span class=\"token punctuation\">.</span>ALIGN_CENTER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        Row_2_Cell_4<span class=\"token punctuation\">.</span>BackgroundColor <span class=\"token operator\">=</span> BaseColor<span class=\"token punctuation\">.</span>LightGray<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        tableRow_2<span class=\"token punctuation\">.</span><span class=\"token function\">AddCell</span><span class=\"token punctuation\">(</span>Row_2_Cell_4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Row_2_Cell_5 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PdfPCell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Paragraph</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"地址\"</span><span class=\"token punctuation\">,</span> baseFont<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        Row_2_Cell_5<span class=\"token punctuation\">.</span>HorizontalAlignment <span class=\"token operator\">=</span> Element<span class=\"token punctuation\">.</span>ALIGN_CENTER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        Row_2_Cell_5<span class=\"token punctuation\">.</span>BackgroundColor <span class=\"token operator\">=</span> BaseColor<span class=\"token punctuation\">.</span>LightGray<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        tableRow_2<span class=\"token punctuation\">.</span><span class=\"token function\">AddCell</span><span class=\"token punctuation\">(</span>Row_2_Cell_5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Row_2_Cell_6 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PdfPCell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Paragraph</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"备注\"</span><span class=\"token punctuation\">,</span> baseFont<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        Row_2_Cell_6<span class=\"token punctuation\">.</span>HorizontalAlignment <span class=\"token operator\">=</span> Element<span class=\"token punctuation\">.</span>ALIGN_CENTER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        Row_2_Cell_6<span class=\"token punctuation\">.</span>BackgroundColor <span class=\"token operator\">=</span> BaseColor<span class=\"token punctuation\">.</span>LightGray<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        tableRow_2<span class=\"token punctuation\">.</span><span class=\"token function\">AddCell</span><span class=\"token punctuation\">(</span>Row_2_Cell_6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Row_2_Cell_7 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PdfPCell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Paragraph</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"商品数\"</span><span class=\"token punctuation\">,</span> baseFont<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        Row_2_Cell_7<span class=\"token punctuation\">.</span>HorizontalAlignment <span class=\"token operator\">=</span> Element<span class=\"token punctuation\">.</span>ALIGN_CENTER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        Row_2_Cell_7<span class=\"token punctuation\">.</span>BackgroundColor <span class=\"token operator\">=</span> BaseColor<span class=\"token punctuation\">.</span>LightGray<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        tableRow_2<span class=\"token punctuation\">.</span><span class=\"token function\">AddCell</span><span class=\"token punctuation\">(</span>Row_2_Cell_7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Row_2_Cell_8 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PdfPCell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Paragraph</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"应收金额\"</span><span class=\"token punctuation\">,</span> baseFont<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        Row_2_Cell_8<span class=\"token punctuation\">.</span>HorizontalAlignment <span class=\"token operator\">=</span> Element<span class=\"token punctuation\">.</span>ALIGN_CENTER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        Row_2_Cell_8<span class=\"token punctuation\">.</span>BackgroundColor <span class=\"token operator\">=</span> BaseColor<span class=\"token punctuation\">.</span>LightGray<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        tableRow_2<span class=\"token punctuation\">.</span><span class=\"token function\">AddCell</span><span class=\"token punctuation\">(</span>Row_2_Cell_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        document<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        document<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>placeholder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        document<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>para<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        document<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>placeholder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token comment\">//document.Add(tableRow_1);</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        document<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>tableRow_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 填充List数据</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        <span class=\"token class-name\">Type</span> t <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 获得该类的 Type</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>            <span class=\"token class-name\">PdfPTable</span> tableRow_3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PdfPTable</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>            tableRow_3<span class=\"token punctuation\">.</span>TotalWidth <span class=\"token operator\">=</span> <span class=\"token number\">580f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>            tableRow_3<span class=\"token punctuation\">.</span>LockedWidth <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>            tableRow_3<span class=\"token punctuation\">.</span>DefaultCell<span class=\"token punctuation\">.</span>Border <span class=\"token operator\">=</span> Rectangle<span class=\"token punctuation\">.</span>NO_BORDER<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>            tableRow_3<span class=\"token punctuation\">.</span>WidthPercentage <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>            tableRow_3<span class=\"token punctuation\">.</span>DefaultCell<span class=\"token punctuation\">.</span>MinimumHeight <span class=\"token operator\">=</span> <span class=\"token number\">80f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            <span class=\"token comment\">//float[] headWidths_3 = new float[] &#123; 100f, 300f, 120f, 300f, 540f, 300f, 100f, 200f &#125;;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">float</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> headWidths_3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">float</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">50f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">220f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">140f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70f</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>            tableRow_3<span class=\"token punctuation\">.</span><span class=\"token function\">SetWidths</span><span class=\"token punctuation\">(</span>headWidths_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PropertyInfo</span> pi <span class=\"token keyword\">in</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">GetProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 遍历属性值</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> <span class=\"token keyword\">value</span> <span class=\"token operator\">=</span> pi<span class=\"token punctuation\">.</span><span class=\"token function\">GetValue</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> txt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Paragraph</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">,</span> baseFont<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> cell <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PdfPCell</span><span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>                tableRow_3<span class=\"token punctuation\">.</span><span class=\"token function\">AddCell</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>            document<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>tableRow_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>        <span class=\"token comment\">// 页脚</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        <span class=\"token class-name\">PDFFooter</span> footer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PDFFooter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        footer<span class=\"token punctuation\">.</span><span class=\"token function\">OnEndPage</span><span class=\"token punctuation\">(</span>pw<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>        document<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>        fileStream<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>        fileStream<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">GetFileStream</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token comment\">/// 文件转成字节</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token comment\">/// 并删除文件</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    <span class=\"token comment\">/// 返回字节</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>    <span class=\"token comment\">/// &lt;param name=\"filePath\">&lt;/param></span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">GetFileStream</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> byteBuffer <span class=\"token operator\">=</span> File<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAllBytes</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>byteBuffer<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>File<span class=\"token punctuation\">.</span><span class=\"token function\">Exists</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>                File<span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>            <span class=\"token keyword\">return</span> byteBuffer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PDFFooter</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">PdfPageEventHelper</span></span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>        <span class=\"token comment\">// write on top of document</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnOpenDocument</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PdfWriter</span> writer<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Document</span> document<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>            <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnOpenDocument</span><span class=\"token punctuation\">(</span>writer<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>            <span class=\"token class-name\">PdfPTable</span> tabFot <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PdfPTable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">float</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">1F</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>            tabFot<span class=\"token punctuation\">.</span>SpacingAfter <span class=\"token operator\">=</span> <span class=\"token number\">10F</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>            <span class=\"token class-name\">PdfPCell</span> cell<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>            <span class=\"token comment\">//tabFot.TotalWidth = 300F;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>            cell <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PdfPCell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Phrase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Header\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>            tabFot<span class=\"token punctuation\">.</span><span class=\"token function\">AddCell</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>            tabFot<span class=\"token punctuation\">.</span><span class=\"token function\">WriteSelectedRows</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span>Top<span class=\"token punctuation\">,</span> writer<span class=\"token punctuation\">.</span>DirectContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>        <span class=\"token comment\">// write on start of each page</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnStartPage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PdfWriter</span> writer<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Document</span> document<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>            <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnStartPage</span><span class=\"token punctuation\">(</span>writer<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>        <span class=\"token comment\">// write on end of each page</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEndPage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PdfWriter</span> writer<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Document</span> document<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>            <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnEndPage</span><span class=\"token punctuation\">(</span>writer<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> footFont <span class=\"token operator\">=</span> FontFactory<span class=\"token punctuation\">.</span><span class=\"token function\">GetFont</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Lato\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.667f</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">BaseColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//*</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>        <span class=\"token comment\">//write on close of document</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnCloseDocument</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PdfWriter</span> writer<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Document</span> document<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>            <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnCloseDocument</span><span class=\"token punctuation\">(</span>writer<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre></pre></td></tr><tr><td data-num=\"216\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Id <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> OrderNo <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Route <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> FromToTime <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Address <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Remark <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Count <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">decimal</span></span> Amount <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre></pre></td></tr><tr><td data-num=\"235\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DataEntity</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> TaskName <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> SiteName <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"散会\"><a class=\"markdownIt-Anchor\" href=\"#散会\">#</a> 散会！！！</h3>\n<p><img data-src=\"dalao.gif\" alt=\"我怎么这么垃圾，我要有技术会是这鬼样？\"></p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/DotNETCore_WebAPI_Jwt/",
            "url": "https://blog.lovetianci.cn/DotNET/DotNETCore_WebAPI_Jwt/",
            "title": "学习.NET Core Jwt授权与鉴权",
            "date_published": "2021-03-03T01:00:00.000Z",
            "content_html": "<h3 id=\"大晚上写的博客内容不是很细致记录一个简单的过程\"><a class=\"markdownIt-Anchor\" href=\"#大晚上写的博客内容不是很细致记录一个简单的过程\">#</a> 大晚上写的博客，内容不是很细致，记录一个简单的过程</h3>\n<a id=\"more\"></a>\n<h3 id=\"首先安装jwt所需的nuget包\"><a class=\"markdownIt-Anchor\" href=\"#首先安装jwt所需的nuget包\">#</a> 首先安装 jwt 所需的 Nuget 包</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Microsoft<span class=\"token punctuation\">.</span>AspNetCore<span class=\"token punctuation\">.</span>Authentication<span class=\"token punctuation\">.</span>JwtBearer</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>System<span class=\"token punctuation\">.</span>ldentityModel<span class=\"token punctuation\">.</span>Tokens<span class=\"token punctuation\">.</span>Jwt</pre></td></tr></table></figure><p><img data-src=\"Jwt_Nuget.png\" alt=\"Nuget\"></p>\n<h3 id=\"根据账户生成token的方法\"><a class=\"markdownIt-Anchor\" href=\"#根据账户生成token的方法\">#</a> 根据账户生成 token 的方法</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 获取 token</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"username\">&lt;/param></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetToken</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> username<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">IsNullOrEmpty</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> claims <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Claim</span><span class=\"token punctuation\">(</span>JwtRegisteredClaimNames<span class=\"token punctuation\">.</span>Sub<span class=\"token punctuation\">,</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Claim</span><span class=\"token punctuation\">(</span>JwtRegisteredClaimNames<span class=\"token punctuation\">.</span>Jti<span class=\"token punctuation\">,</span>Guid<span class=\"token punctuation\">.</span><span class=\"token function\">NewGuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> key <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SymmetricSecurityKey</span><span class=\"token punctuation\">(</span>Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SDMC-CJAS1-SAD-DFSFA-SADHJVF-VF\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> creds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SigningCredentials</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> SecurityAlgorithms<span class=\"token punctuation\">.</span>HmacSha256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> token <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">JwtSecurityToken</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token named-parameter punctuation\">issuer</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Admin\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 签发人</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            audience<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Admin\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 受众</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            claims<span class=\"token punctuation\">:</span> claims<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token named-parameter punctuation\">expires</span><span class=\"token punctuation\">:</span> DateTime<span class=\"token punctuation\">.</span>Now<span class=\"token punctuation\">.</span><span class=\"token function\">AddMinutes</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 过期时间</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            signingCredentials<span class=\"token punctuation\">:</span> creds</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">JwtSecurityTokenHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WriteToken</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"账号不存在\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"configureservices添加jwt验证\"><a class=\"markdownIt-Anchor\" href=\"#configureservices添加jwt验证\">#</a> ConfigureServices 添加 JWT 验证</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>services<span class=\"token punctuation\">.</span><span class=\"token function\">AddAuthentication</span><span class=\"token punctuation\">(</span>JwtBearerDefaults<span class=\"token punctuation\">.</span>AuthenticationScheme<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">AddJwtBearer</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        options<span class=\"token punctuation\">.</span>TokenValidationParameters <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TokenValidationParameters</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            ValidateIssuer <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 是否验证 Issuer</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            ValidateAudience <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 是否验证 Audience</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            ValidateLifetime <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 是否验证失效时间</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            ClockSkew <span class=\"token operator\">=</span> TimeSpan<span class=\"token punctuation\">.</span><span class=\"token function\">FromSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            ValidateIssuerSigningKey <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 是否验证 SecurityKey</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            ValidAudience <span class=\"token operator\">=</span> <span class=\"token string\">\"Admin\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//Audience</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            ValidIssuer <span class=\"token operator\">=</span> <span class=\"token string\">\"Admin\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//Issuer，这两项和前面签发 jwt 的设置一致</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            IssuerSigningKey <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SymmetricSecurityKey</span><span class=\"token punctuation\">(</span>Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SDMC-CJAS1-SAD-DFSFA-SADHJVF-VF\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 拿到 SecurityKey</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        options<span class=\"token punctuation\">.</span>Events <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">JwtBearerEvents</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">// 此处为权限验证失败后触发的事件</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            OnChallenge <span class=\"token operator\">=</span> context <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token comment\">// 此处代码为终止.Net Core 默认的返回类型和数据结果，这个很重要哦，必须</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                context<span class=\"token punctuation\">.</span><span class=\"token function\">HandleResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token comment\">// 自定义自己想要返回的数据结果         </span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> payload <span class=\"token operator\">=</span> JsonConvert<span class=\"token punctuation\">.</span><span class=\"token function\">SerializeObject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token punctuation\">&#123;</span> code <span class=\"token operator\">=</span> <span class=\"token number\">401</span><span class=\"token punctuation\">,</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">&#123;</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"Token过期，请重新登录!!!\"</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token comment\">// 自定义返回的数据类型</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                context<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span>ContentType <span class=\"token operator\">=</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token comment\">// 自定义返回状态码，默认为 401 我这里改成 200</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                context<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span>StatusCode <span class=\"token operator\">=</span> StatusCodes<span class=\"token punctuation\">.</span>Status401Unauthorized<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token comment\">// 输出 Json 数据结果</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                context<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span><span class=\"token function\">WriteAsync</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token keyword\">return</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">FromResult</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"configure添加jwt鉴权\"><a class=\"markdownIt-Anchor\" href=\"#configure添加jwt鉴权\">#</a> Configure 添加 jwt 鉴权</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//jwt 鉴权</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">UseAuthentication</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 使用跨域</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">UseHttpsRedirection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">UseCors</span><span class=\"token punctuation\">(</span>builder <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>builder<span class=\"token punctuation\">.</span><span class=\"token function\">AllowAnyOrigin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AllowAnyMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AllowAnyHeader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"最后控制器添加authorize用来鉴权\"><a class=\"markdownIt-Anchor\" href=\"#最后控制器添加authorize用来鉴权\">#</a> 最后控制器添加 [Authorize] 用来鉴权</h3>\n<h3 id=\"如果要使用swagger进行鉴权在configureservices里面的servicesaddswaggergen里面加上下面这段代码即可\"><a class=\"markdownIt-Anchor\" href=\"#如果要使用swagger进行鉴权在configureservices里面的servicesaddswaggergen里面加上下面这段代码即可\">#</a> 如果要使用 Swagger 进行鉴权，在 ConfigureServices 里面的 services.AddSwaggerGen 里面加上下面这段代码即可</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c<span class=\"token punctuation\">.</span><span class=\"token function\">AddSecurityDefinition</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bearer\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">OpenApiSecurityScheme</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    In <span class=\"token operator\">=</span> ParameterLocation<span class=\"token punctuation\">.</span>Header<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Type <span class=\"token operator\">=</span> SecuritySchemeType<span class=\"token punctuation\">.</span>ApiKey<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Description <span class=\"token operator\">=</span> <span class=\"token string\">\"直接在下框中输入Bearer &#123;token&#125;（注意两者之间是一个空格）\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Authorization\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    BearerFormat <span class=\"token operator\">=</span> <span class=\"token string\">\"JWT\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Scheme <span class=\"token operator\">=</span> <span class=\"token string\">\"Bearer\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>c<span class=\"token punctuation\">.</span><span class=\"token function\">AddSecurityRequirement</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">OpenApiSecurityRequirement</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">OpenApiSecurityScheme</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            Reference <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">OpenApiReference</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                Type <span class=\"token operator\">=</span> ReferenceType<span class=\"token punctuation\">.</span>SecurityScheme<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                Id <span class=\"token operator\">=</span> <span class=\"token string\">\"Bearer\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/WPF_Learning_2/",
            "url": "https://blog.lovetianci.cn/DotNET/WPF_Learning_2/",
            "title": "WPF DataTable帮助类",
            "date_published": "2021-01-21T11:30:00.000Z",
            "content_html": "<h3 id=\"分享一下wpf-datatable帮助类\"><a class=\"markdownIt-Anchor\" href=\"#分享一下wpf-datatable帮助类\">#</a> 分享一下 WPF DataTable 帮助类</h3>\n<a id=\"more\"></a>\n<h3 id=\"datatable导出csv\"><a class=\"markdownIt-Anchor\" href=\"#datatable导出csv\">#</a> DataTable 导出 CSV</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// DataTable 导出 CSV</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"dt\">&lt;/param></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SaveCSV</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataTable</span> dt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token class-name\">SaveFileDialog</span> saveFile <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SaveFileDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  saveFile<span class=\"token punctuation\">.</span>Title <span class=\"token operator\">=</span> <span class=\"token string\">\"保存文件\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  saveFile<span class=\"token punctuation\">.</span>Filter <span class=\"token operator\">=</span> <span class=\"token string\">\"CSV文件(*.csv) |*.csv |所有文件(*.*) |*.*\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  saveFile<span class=\"token punctuation\">.</span>FilterIndex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>saveFile<span class=\"token punctuation\">.</span><span class=\"token function\">ShowDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> System<span class=\"token punctuation\">.</span>Windows<span class=\"token punctuation\">.</span>Forms<span class=\"token punctuation\">.</span>DialogResult<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> fileName <span class=\"token operator\">=</span> saveFile<span class=\"token punctuation\">.</span>FileName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>File<span class=\"token punctuation\">.</span><span class=\"token function\">Exists</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      File<span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token class-name\">FileStream</span> fs <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token class-name\">StreamWriter</span> sw <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">// 先打印标头</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token class-name\">StringBuilder</span> strColu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token class-name\">StringBuilder</span> strValue <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      fs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FileStream</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span> FileMode<span class=\"token punctuation\">.</span>Create<span class=\"token punctuation\">,</span> FileAccess<span class=\"token punctuation\">.</span>Write<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      sw <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StreamWriter</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">,</span> Encoding<span class=\"token punctuation\">.</span>Default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> dt<span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        strColu<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>dt<span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ColumnName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        strColu<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      strColu<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>strColu<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 移出掉最后一个，字符</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      sw<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>strColu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DataRow</span> dr <span class=\"token keyword\">in</span> dt<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        strValue<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> strValue<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 移出</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> dt<span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>          strValue<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token function\">ReplaceChar</span><span class=\"token punctuation\">(</span>dr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> DBNull<span class=\"token punctuation\">.</span>Value <span class=\"token punctuation\">?</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">:</span> dr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>          strValue<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        strValue<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>strValue<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 移出掉最后一个，字符</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        sw<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>strValue<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      sw<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      System<span class=\"token punctuation\">.</span>Windows<span class=\"token punctuation\">.</span>MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">.</span>Message<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    System<span class=\"token punctuation\">.</span>Windows<span class=\"token punctuation\">.</span>Forms<span class=\"token punctuation\">.</span>MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"保存CSV成功\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">,</span> MessageBoxButtons<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">,</span> MessageBoxIcon<span class=\"token punctuation\">.</span>Information<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">/// 防止串列</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"str\">&lt;/param></span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ReplaceChar</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> field <span class=\"token operator\">=</span> str<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">IndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"+\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">IndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">IndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">IndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"'\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">IsNum</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>      <span class=\"token keyword\">return</span> field<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t&#123;0&#125;\"</span><span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">IndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string character\">','</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\"&#123;0&#125;\\\"\"</span><span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">IndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string character\">'\"'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t&#123;0&#125;\"</span><span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">IndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string character\">'\\r'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\"&#123;0&#125;\\\"\"</span><span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">IndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string character\">'\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\"&#123;0&#125;\\\"\"</span><span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">IndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string character\">'\\\"'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\"&#123;0&#125;\\\"\"</span><span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field <span class=\"token operator\">!=</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">Trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\"&#123;0&#125;\\\"\"</span><span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>  <span class=\"token keyword\">return</span> field<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">IsNum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> num<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>  <span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToDecimal</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>  <span class=\"token keyword\">catch</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"datatable转excel\"><a class=\"markdownIt-Anchor\" href=\"#datatable转excel\">#</a> DataTable 转 Excel</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// DataTable 转 Excel</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"m_DataTable\">&lt;/param></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">DataToExcel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataTable</span> m_DataTable<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token class-name\">SaveFileDialog</span> saveFile <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SaveFileDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  saveFile<span class=\"token punctuation\">.</span>Title <span class=\"token operator\">=</span> <span class=\"token string\">\"保存文件\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  saveFile<span class=\"token punctuation\">.</span>Filter <span class=\"token operator\">=</span> <span class=\"token string\">\"EXECL文件(*.xls) |*.xls |所有文件(*.*) |*.*\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  saveFile<span class=\"token punctuation\">.</span>FilterIndex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>saveFile<span class=\"token punctuation\">.</span><span class=\"token function\">ShowDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> System<span class=\"token punctuation\">.</span>Windows<span class=\"token punctuation\">.</span>Forms<span class=\"token punctuation\">.</span>DialogResult<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> FileName <span class=\"token operator\">=</span> saveFile<span class=\"token punctuation\">.</span>FileName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>File<span class=\"token punctuation\">.</span><span class=\"token function\">Exists</span><span class=\"token punctuation\">(</span>FileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      File<span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>FileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token class-name\">FileStream</span> objFileStream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token class-name\">StreamWriter</span> objStreamWriter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> strLine <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    objFileStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FileStream</span><span class=\"token punctuation\">(</span>FileName<span class=\"token punctuation\">,</span> FileMode<span class=\"token punctuation\">.</span>OpenOrCreate<span class=\"token punctuation\">,</span> FileAccess<span class=\"token punctuation\">.</span>Write<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    objStreamWriter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StreamWriter</span><span class=\"token punctuation\">(</span>objFileStream<span class=\"token punctuation\">,</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>Unicode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m_DataTable<span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      strLine <span class=\"token operator\">=</span> strLine <span class=\"token operator\">+</span> m_DataTable<span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Caption<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToChar</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    objStreamWriter<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>strLine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    strLine <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m_DataTable<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> m_DataTable<span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_DataTable<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ItemArray<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>          strLine <span class=\"token operator\">=</span> strLine <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToChar</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>          <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> rowstr <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>          rowstr <span class=\"token operator\">=</span> m_DataTable<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ItemArray<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowstr<span class=\"token punctuation\">.</span><span class=\"token function\">IndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            rowstr <span class=\"token operator\">=</span> rowstr<span class=\"token punctuation\">.</span><span class=\"token function\">Replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rowstr<span class=\"token punctuation\">.</span><span class=\"token function\">IndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            rowstr <span class=\"token operator\">=</span> rowstr<span class=\"token punctuation\">.</span><span class=\"token function\">Replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>          strLine <span class=\"token operator\">=</span> strLine <span class=\"token operator\">+</span> rowstr <span class=\"token operator\">+</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToChar</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>      objStreamWriter<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>strLine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      strLine <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    objStreamWriter<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    objStreamWriter<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    objFileStream<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    objFileStream<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    System<span class=\"token punctuation\">.</span>Windows<span class=\"token punctuation\">.</span>Forms<span class=\"token punctuation\">.</span>MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"保存EXCEL成功\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">,</span> MessageBoxButtons<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">,</span> MessageBoxIcon<span class=\"token punctuation\">.</span>Information<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"coder.jpg\" alt=\"苦逼程序猿\"></p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/WPF_Learning_1/",
            "url": "https://blog.lovetianci.cn/DotNET/WPF_Learning_1/",
            "title": "WPF知识点",
            "date_published": "2021-01-20T16:30:00.000Z",
            "content_html": "<h3 id=\"2021首发\"><a class=\"markdownIt-Anchor\" href=\"#2021首发\">#</a> 2021 首发</h3>\n<a id=\"more\"></a>\n<h3 id=\"1-首先写一个list转datatable的方法\"><a class=\"markdownIt-Anchor\" href=\"#1-首先写一个list转datatable的方法\">#</a> 1. 首先写一个 List 转 DataTable 的方法</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DataTable</span> <span class=\"token generic-method\"><span class=\"token function\">ListToDt</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IEnumerable<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">></span></span> collection<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> props <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> dt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  dt<span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">.</span><span class=\"token function\">AddRange</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">Select</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token constructor-invocation class-name\">DataColumn</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>PropertyType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>collection<span class=\"token punctuation\">.</span><span class=\"token function\">Count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> collection<span class=\"token punctuation\">.</span><span class=\"token function\">Count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token class-name\">ArrayList</span> tempList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PropertyInfo</span> pi <span class=\"token keyword\">in</span> props<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\"><span class=\"token keyword\">object</span></span> obj <span class=\"token operator\">=</span> pi<span class=\"token punctuation\">.</span><span class=\"token function\">GetValue</span><span class=\"token punctuation\">(</span>collection<span class=\"token punctuation\">.</span><span class=\"token function\">ElementAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        tempList<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token class-name\"><span class=\"token keyword\">object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> array <span class=\"token operator\">=</span> tempList<span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      dt<span class=\"token punctuation\">.</span><span class=\"token function\">LoadDataRow</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">return</span> dt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"然后定义一个list\"><a class=\"markdownIt-Anchor\" href=\"#然后定义一个list\">#</a> 然后定义一个 list</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Teacher<span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Teacher<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Teacher</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Password <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"方法内调用\"><a class=\"markdownIt-Anchor\" href=\"#方法内调用\">#</a> 方法内调用</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">DataTable</span> dt <span class=\"token operator\">=</span> <span class=\"token function\">ListToDt</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">DataView</span> dv <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataView</span><span class=\"token punctuation\">(</span>dt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"这样一个list就转成了dataview\"><a class=\"markdownIt-Anchor\" href=\"#这样一个list就转成了dataview\">#</a> 这样一个 List 就转成了 DataView</h3>\n<h3 id=\"2-然后是datatable行转列的方法\"><a class=\"markdownIt-Anchor\" href=\"#2-然后是datatable行转列的方法\">#</a> 2. 然后是 DataTable 行转列的方法</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">DataTable</span> <span class=\"token function\">SwapTable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataTable</span> tableData<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> intRows <span class=\"token operator\">=</span> tableData<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> intColumns <span class=\"token operator\">=</span> tableData<span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// 转二维数组</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> arrayData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">string</span></span><span class=\"token punctuation\">[</span>intRows<span class=\"token punctuation\">,</span> intColumns<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> intRows<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> intColumns<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      arrayData<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tableData<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">j</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token comment\">// 下标对换</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span></span> arrSwap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">string</span></span><span class=\"token punctuation\">[</span>intColumns<span class=\"token punctuation\">,</span> intRows<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> m <span class=\"token operator\">&lt;</span> intColumns<span class=\"token punctuation\">;</span> m<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> intRows<span class=\"token punctuation\">;</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      arrSwap<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arrayData<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token class-name\">DataTable</span> dt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token comment\">// 添加列</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> intRows<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    dt<span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataColumn</span><span class=\"token punctuation\">(</span>arrSwap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token comment\">// 添加行</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> r <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> r <span class=\"token operator\">&lt;</span> intColumns<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token class-name\">DataRow</span> dr <span class=\"token operator\">=</span> dt<span class=\"token punctuation\">.</span><span class=\"token function\">NewRow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">&lt;</span> intRows<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      dr<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arrSwap<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    dt<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>dr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token comment\">// 添加行头</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token class-name\">DataColumn</span> ColRowHead <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataColumn</span><span class=\"token punctuation\">(</span>tableData<span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ColumnName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  dt<span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>ColRowHead<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  dt<span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">[</span>ColRowHead<span class=\"token punctuation\">.</span>ColumnName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetOrdinal</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> intColumns <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    dt<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">ColRowHead<span class=\"token punctuation\">.</span>ColumnName</span></span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tableData<span class=\"token punctuation\">.</span>Columns<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ColumnName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token keyword\">return</span> dt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"3-wpf获取选中某行的值\"><a class=\"markdownIt-Anchor\" href=\"#3-wpf获取选中某行的值\">#</a> 3. WPF 获取选中某行的值</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 选中事件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"sender\">&lt;/param></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/// &lt;param name=\"e\">&lt;/param></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">dataGrid_SelectedCellsChanged</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SelectedCellsChangedEventArgs</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token class-name\">DataRowView</span> mySelectedItem <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DataRowView<span class=\"token punctuation\">)</span>dataGrid<span class=\"token punctuation\">.</span>SelectedItem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">// 判断有没有选中</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mySelectedItem <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token class-name\">DataRow</span> result <span class=\"token operator\">=</span> mySelectedItem<span class=\"token punctuation\">.</span>Row<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token class-name\">DataTable</span> dataTableNew <span class=\"token operator\">=</span> dataTable<span class=\"token punctuation\">.</span><span class=\"token function\">Clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    dataTableNew<span class=\"token punctuation\">.</span><span class=\"token function\">ImportRow</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGrid1<span class=\"token punctuation\">.</span>ItemsSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataView</span><span class=\"token punctuation\">(</span>dataTableNew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"4-datatable筛选数据\"><a class=\"markdownIt-Anchor\" href=\"#4-datatable筛选数据\">#</a> 4. DataTable 筛选数据</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">DataRow<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> dr <span class=\"token operator\">=</span> dataTable<span class=\"token punctuation\">.</span><span class=\"token function\">Select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name ='张三'\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Time DESC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">DataTable</span> dataTableNew <span class=\"token operator\">=</span> dataTable<span class=\"token punctuation\">.</span><span class=\"token function\">Clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dr<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  dataTableNew<span class=\"token punctuation\">.</span><span class=\"token function\">ImportRow</span><span class=\"token punctuation\">(</span>dr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGrid1<span class=\"token punctuation\">.</span>ItemsSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataView</span><span class=\"token punctuation\">(</span>dataTableNew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"5-textbox实时更新binding的property\"><a class=\"markdownIt-Anchor\" href=\"#5-textbox实时更新binding的property\">#</a> 5. TextBox 实时更新 Binding 的 Property</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Text<span class=\"token operator\">=</span><span class=\"token string\">\"&#123;Binding SearchText,UpdateSourceTrigger=PropertyChanged&#125;\"</span></pre></td></tr></table></figure><p><img data-src=\"coder.gif\" alt=\"鸭梨好大\"></p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/CSharp_File/",
            "url": "https://blog.lovetianci.cn/DotNET/CSharp_File/",
            "title": "C#获取指定文件夹所有文件",
            "date_published": "2020-12-30T17:00:00.000Z",
            "content_html": "<h3 id=\"2020快过完了赶紧水一篇博客\"><a class=\"markdownIt-Anchor\" href=\"#2020快过完了赶紧水一篇博客\">#</a> 2020 快过完了，赶紧水一篇博客</h3>\n<a id=\"more\"></a>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取桌面路径</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> desktop <span class=\"token operator\">=</span> Environment<span class=\"token punctuation\">.</span><span class=\"token function\">GetFolderPath</span><span class=\"token punctuation\">(</span>Environment<span class=\"token punctuation\">.</span>SpecialFolder<span class=\"token punctuation\">.</span>Desktop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> path <span class=\"token operator\">=</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">@\"&#123;0&#125;\\&#123;1&#125;\"</span><span class=\"token punctuation\">,</span> desktop<span class=\"token punctuation\">,</span> <span class=\"token string\">\"加密前\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">DirectoryInfo</span> folder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DirectoryInfo</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 从路径下循环获取文件</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FileInfo</span> file <span class=\"token keyword\">in</span> folder<span class=\"token punctuation\">.</span><span class=\"token function\">GetFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">// 打印文件路径到控制台</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>FullName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"控制台打印信息\"><a class=\"markdownIt-Anchor\" href=\"#控制台打印信息\">#</a> 控制台打印信息</h3>\n<p><img data-src=\"console.png\" alt=\"控制台打印信息\"></p>\n<h3 id=\"很明显这个打印的顺序就不对\"><a class=\"markdownIt-Anchor\" href=\"#很明显这个打印的顺序就不对\">#</a> 很明显，这个打印的顺序就不对</h3>\n<h3 id=\"可以稍加修改一下写入到txt\"><a class=\"markdownIt-Anchor\" href=\"#可以稍加修改一下写入到txt\">#</a> 可以稍加修改一下，写入到 txt</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> desktop <span class=\"token operator\">=</span> Environment<span class=\"token punctuation\">.</span><span class=\"token function\">GetFolderPath</span><span class=\"token punctuation\">(</span>Environment<span class=\"token punctuation\">.</span>SpecialFolder<span class=\"token punctuation\">.</span>Desktop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> path <span class=\"token operator\">=</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">@\"&#123;0&#125;\\&#123;1&#125;\"</span><span class=\"token punctuation\">,</span> desktop<span class=\"token punctuation\">,</span> <span class=\"token string\">\"加密前\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">DirectoryInfo</span> folder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DirectoryInfo</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">StreamWriter</span> txt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>File<span class=\"token punctuation\">.</span><span class=\"token function\">Exists</span><span class=\"token punctuation\">(</span>desktop <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\\\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"路径.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">// 把原来的删掉重新创建一个</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  File<span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>desktop <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\\\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"路径.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  txt <span class=\"token operator\">=</span> File<span class=\"token punctuation\">.</span><span class=\"token function\">CreateText</span><span class=\"token punctuation\">(</span>desktop <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\\\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"路径.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token comment\">// 创建 -> 路径.txt</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  txt <span class=\"token operator\">=</span> File<span class=\"token punctuation\">.</span><span class=\"token function\">CreateText</span><span class=\"token punctuation\">(</span>desktop <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\\\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"路径.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> fileNameList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FileInfo</span> file <span class=\"token keyword\">in</span> folder<span class=\"token punctuation\">.</span><span class=\"token function\">GetFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token comment\">// 写入到 list 里面存储</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  fileNameList<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>FullName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// 创建一个数组</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> list<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">string</span></span><span class=\"token punctuation\">[</span>fileNameList<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// 把 list 值加到数组</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> fileNameList<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fileNameList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">// 调用排序方法</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>Array<span class=\"token punctuation\">.</span><span class=\"token function\">Sort</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FileNameSort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> fileUrl <span class=\"token keyword\">in</span> list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token comment\">// 写入 txt</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  txt<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>fileUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>fileUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">// 释放资源</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>txt<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>txt<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"这里说一下为啥要创建list和数组\"><a class=\"markdownIt-Anchor\" href=\"#这里说一下为啥要创建list和数组\">#</a> 这里说一下为啥要创建 list 和数组</h3>\n<h3 id=\"因为看上图顺序是乱的所以就排序了一下\"><a class=\"markdownIt-Anchor\" href=\"#因为看上图顺序是乱的所以就排序了一下\">#</a> 因为看上图顺序是乱的，所以就排序了一下</h3>\n<p><img data-src=\"console2.png\" alt=\"控制台打印信息\"></p>\n<h3 id=\"这一次就没问题了\"><a class=\"markdownIt-Anchor\" href=\"#这一次就没问题了\">#</a> 这一次就没问题了</h3>\n<p><img data-src=\"txt.png\" alt=\"文本写入\"></p>\n<h3 id=\"包括文本写入也正常\"><a class=\"markdownIt-Anchor\" href=\"#包括文本写入也正常\">#</a> 包括文本写入也正常</h3>\n<h3 id=\"排序的方法\"><a class=\"markdownIt-Anchor\" href=\"#排序的方法\">#</a> 排序的方法</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileNameSort</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IComparer</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">// 调用 windos 的 DLL</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">[</span>System<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>InteropServices<span class=\"token punctuation\">.</span><span class=\"token function\">DllImport</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Shlwapi.dll\"</span><span class=\"token punctuation\">,</span> CharSet <span class=\"token operator\">=</span> CharSet<span class=\"token punctuation\">.</span>Unicode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">extern</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">StrCmpLogicalW</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> param1<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> param2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">// 前后文件名进行比较。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">Compare</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> name1<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">object</span></span> name2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> name1 <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> name2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> name1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> name2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">StrCmpLogicalW</span><span class=\"token punctuation\">(</span>name1<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> name2<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/CSharp_Read/",
            "url": "https://blog.lovetianci.cn/DotNET/CSharp_Read/",
            "title": "C#读取文本文件",
            "date_published": "2020-07-19T12:30:00.000Z",
            "content_html": "<a id=\"more\"></a>\n<h3 id=\"静态方法读取所有内容\"><a class=\"markdownIt-Anchor\" href=\"#静态方法读取所有内容\">#</a> 静态方法读取所有内容</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>File<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAllText</span><span class=\"token punctuation\">(</span><span class=\"token string\">@\"F:\\bintianci\\MyCode\\1.txt\"</span><span class=\"token punctuation\">,</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"静态方法读取所有行\"><a class=\"markdownIt-Anchor\" href=\"#静态方法读取所有行\">#</a> 静态方法读取所有行</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> allLines <span class=\"token operator\">=</span> File<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAllLines</span><span class=\"token punctuation\">(</span><span class=\"token string\">@\"F:\\bintianci\\MyCode\\1.txt\"</span><span class=\"token punctuation\">,</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 遍历输出</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> line <span class=\"token keyword\">in</span> allLines<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"一次读一行\"><a class=\"markdownIt-Anchor\" href=\"#一次读一行\">#</a> 一次读一行</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 文件路径</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> filePath <span class=\"token operator\">=</span> <span class=\"token string\">@\"F:\\bintianci\\MyCode\\1.txt\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 文本读取器</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TextReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StreamReader</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 一次读一行</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">?</span></span> textLine <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">//// 遍历读取</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>textLine <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token comment\">// 输出读取的内容</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>textLine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       <span class=\"token comment\">// 停一下</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>       System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>       <span class=\"token comment\">// 继续读</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       textLine <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"一次读一个字符\"><a class=\"markdownIt-Anchor\" href=\"#一次读一个字符\">#</a> 一次读一个字符</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 文件路径</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> filePath <span class=\"token operator\">=</span> <span class=\"token string\">@\"F:\\bintianci\\MyCode\\1.txt\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 文本读取器</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TextReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StreamReader</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 一次读一个字符</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> textChar <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">//// 遍历读取</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>textChar <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token comment\">// 输出读取的内容</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       Console<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span>textChar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       <span class=\"token comment\">// 停一下</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>       System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>       <span class=\"token comment\">// 继续读</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       textChar <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"一次性读完\"><a class=\"markdownIt-Anchor\" href=\"#一次性读完\">#</a> 一次性读完</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 文件路径</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> filePath <span class=\"token operator\">=</span> <span class=\"token string\">@\"F:\\bintianci\\MyCode\\1.txt\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 文本读取器</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TextReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StreamReader</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>Encoding<span class=\"token punctuation\">.</span>UTF8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 一次性读完</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> textContent <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">ReadToEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 输出读取的内容</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/DotNETCore_WebAPI_EFCore_MySQL/",
            "url": "https://blog.lovetianci.cn/DotNET/DotNETCore_WebAPI_EFCore_MySQL/",
            "title": ".NET Core WebAPI使用EFCore连接MySQL",
            "date_published": "2020-07-09T18:00:00.000Z",
            "content_html": "<h2 id=\"记录一下net\"><a class=\"markdownIt-Anchor\" href=\"#记录一下net\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL3huLS00Z3F3YTA5M2t5MDViLk5FVA==\">记录一下.NET</span> Core 使用 EFCore 连接 MySQL 数据库</h2>\n<a id=\"more\"></a>\n<h3 id=\"首先从nuget包里面找到mysqldataentityframeworkcore进行安装\"><a class=\"markdownIt-Anchor\" href=\"#首先从nuget包里面找到mysqldataentityframeworkcore进行安装\">#</a> 首先从 nuget 包里面找到 MySQL.Data.EntityFrameworkCore 进行安装</h3>\n<p><img data-src=\"EFCore.png\" alt=\"EFCore\"></p>\n<h3 id=\"因为我的net\"><a class=\"markdownIt-Anchor\" href=\"#因为我的net\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL3huLS1zaXFyNHN2dWprc3UuTkVU\">因为我的.NET</span> Core 是最新版本 3.1，所以这个 EFCore 我安装的也是最新版本 8.0.20</h3>\n<h3 id=\"第一步在配置文件appsettingsjson里面添加连接字符串\"><a class=\"markdownIt-Anchor\" href=\"#第一步在配置文件appsettingsjson里面添加连接字符串\">#</a> 第一步在配置文件 appsettings.json 里面添加连接字符串</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string\">\"ConnectionStrings\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">\"MySQLConnection\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"server=本地或者线上地址;uid=用户名;pwd=密码;port=端口号;database=需要连接的数据库名称;SslMode=None\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"第二步添加数据库上下文类\"><a class=\"markdownIt-Anchor\" href=\"#第二步添加数据库上下文类\">#</a> 第二步添加数据库上下文类</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EFCoreDbContext</span><span class=\"token punctuation\">:</span><span class=\"token type-list\"><span class=\"token class-name\">DbContext</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">virtual</span> <span class=\"token return-type class-name\">DbSet<span class=\"token punctuation\">&lt;</span>UserInfo<span class=\"token punctuation\">></span></span> Users <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 将实体类添加 Context 中</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token function\">EFCoreDbContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DbContextOptions<span class=\"token punctuation\">&lt;</span>EFCoreDbContext<span class=\"token punctuation\">></span></span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"第三步startupcs里面的configureservices方法下面读取服务添加到容器\"><a class=\"markdownIt-Anchor\" href=\"#第三步startupcs里面的configureservices方法下面读取服务添加到容器\">#</a> 第三步 Startup.cs 里面的 ConfigureServices 方法下面读取服务添加到容器</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddDbContext</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>EFCoreDbContext<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>options<span class=\"token punctuation\">.</span><span class=\"token function\">UseMySQL</span><span class=\"token punctuation\">(</span>Configuration<span class=\"token punctuation\">.</span><span class=\"token function\">GetConnectionString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MySQLConnection\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"最后在需要使用到数据库的控制器内添加构造函数初始化数据库上下文类\"><a class=\"markdownIt-Anchor\" href=\"#最后在需要使用到数据库的控制器内添加构造函数初始化数据库上下文类\">#</a> 最后在需要使用到数据库的控制器内添加构造函数，初始化数据库上下文类</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// 初始化数据库上下文</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">EFCoreDbContext</span> _efCoreDbContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/// 构造及初始化类参数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token function\">ImageController</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EFCoreDbContext</span> coreDbContext<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  _efCoreDbContext <span class=\"token operator\">=</span> coreDbContext<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"最后接口通过上下文类取出相应的数据如果数据不为空则连接成功\"><a class=\"markdownIt-Anchor\" href=\"#最后接口通过上下文类取出相应的数据如果数据不为空则连接成功\">#</a> 最后接口通过上下文类取出相应的数据，如果数据不为空则连接成功</h3>\n<h3 id=\"2021年6月29日重新打开项目发现mysqldataentityframeworkcore已弃用\"><a class=\"markdownIt-Anchor\" href=\"#2021年6月29日重新打开项目发现mysqldataentityframeworkcore已弃用\">#</a> 2021 年 6 月 29 日重新打开项目发现 MySql.Data.EntityFrameworkCore 已弃用</h3>\n<h3 id=\"把这个nuget包删掉安装mysqlentityframeworkcore就好了\"><a class=\"markdownIt-Anchor\" href=\"#把这个nuget包删掉安装mysqlentityframeworkcore就好了\">#</a> 把这个 Nuget 包删掉安装 MySQL.EntityFrameworkCore 就好了</h3>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/CSharp_Attribute/",
            "url": "https://blog.lovetianci.cn/DotNET/CSharp_Attribute/",
            "title": "C# Attribute",
            "date_published": "2020-04-03T11:11:11.000Z",
            "content_html": "<h2 id=\"remark特性的应用场景\"><a class=\"markdownIt-Anchor\" href=\"#remark特性的应用场景\">#</a> Remark 特性的应用场景</h2>\n<a id=\"more\"></a>\n<h3 id=\"场景一用户状态的枚举值定义的是英文的字段需要输出中文含义-枚举定义如下\"><a class=\"markdownIt-Anchor\" href=\"#场景一用户状态的枚举值定义的是英文的字段需要输出中文含义-枚举定义如下\">#</a> 场景一：用户状态的枚举值，定义的是英文的字段，需要输出中文含义。枚举定义如下：</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">UserState</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/// 正常</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    Normal <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// 冻结</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    Frozen <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">/// 删除</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    Deleted <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"普通做法根据枚举值进行判断然后输出中文含义\"><a class=\"markdownIt-Anchor\" href=\"#普通做法根据枚举值进行判断然后输出中文含义\">#</a> 普通做法：根据枚举值进行判断，然后输出中文含义：</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">UserState</span> userState <span class=\"token operator\">=</span> UserState<span class=\"token punctuation\">.</span>Normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>userState<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">case</span> UserState<span class=\"token punctuation\">.</span>Deleted<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">case</span> UserState<span class=\"token punctuation\">.</span>Normal<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"正常\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">case</span> UserState<span class=\"token punctuation\">.</span>Frozen<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"冻结\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"这种写法违反开闭原则不利于以后的扩展下面使用特性实现\"><a class=\"markdownIt-Anchor\" href=\"#这种写法违反开闭原则不利于以后的扩展下面使用特性实现\">#</a> 这种写法违反开闭原则，不利于以后的扩展，下面使用特性实现</h3>\n<h3 id=\"先定义remark特性\"><a class=\"markdownIt-Anchor\" href=\"#先定义remark特性\">#</a> 先定义 Remark 特性：</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// Remark 特性</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RemarkAttribute</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Attribute</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _Remark<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// 有参构造函数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">/// &lt;param name=\"remark\">&lt;/param></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token function\">RemarkAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> remark<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        _Remark <span class=\"token operator\">=</span> remark<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">/// 获取 Remark</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetRemark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">return</span> _Remark<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"userstate枚举修改如下\"><a class=\"markdownIt-Anchor\" href=\"#userstate枚举修改如下\">#</a> UserState 枚举修改如下：</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">UserState</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/// 正常</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token function\">Remark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"正常\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Normal <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">/// 冻结</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token function\">Remark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"冻结\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    Frozen <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/// 删除</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token function\">Remark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    Deleted <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"写一个扩展方法对enum类型进行扩展\"><a class=\"markdownIt-Anchor\" href=\"#写一个扩展方法对enum类型进行扩展\">#</a> 写一个扩展方法，对 Enum 类型进行扩展：</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RemarkExtension</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/// &lt;summary></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/// Enum 的扩展方法</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">/// &lt;/summary></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/// &lt;param name=\"value\">&lt;/param></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/// &lt;returns>&lt;/returns></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetRemark</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">Enum</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 获取类型</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">Type</span> type <span class=\"token operator\">=</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 获取字段</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">FieldInfo</span> fieId <span class=\"token operator\">=</span> type<span class=\"token punctuation\">.</span><span class=\"token function\">GetField</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 判断字段上面是否定义了 ReamrkAttribute 特性</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fieId<span class=\"token punctuation\">.</span><span class=\"token function\">IsDefined</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">RemarkAttribute</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">// 创建实例</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token class-name\">RemarkAttribute</span> attribute <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>RemarkAttribute<span class=\"token punctuation\">)</span>fieId<span class=\"token punctuation\">.</span><span class=\"token function\">GetCustomAttribute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">RemarkAttribute</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">return</span> attribute<span class=\"token punctuation\">.</span><span class=\"token function\">GetRemark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"最后main方法里面调用\"><a class=\"markdownIt-Anchor\" href=\"#最后main方法里面调用\">#</a> 最后 Main () 方法里面调用</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">UserState</span> userState <span class=\"token operator\">=</span> UserState<span class=\"token punctuation\">.</span>Normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>userState<span class=\"token punctuation\">.</span><span class=\"token function\">GetRemark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"输出结果\"><a class=\"markdownIt-Anchor\" href=\"#输出结果\">#</a> 输出结果</h3>\n<p><img data-src=\"Normal.png\" alt=\"输出结果\"></p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/CSharp_Interview_ques_2/",
            "url": "https://blog.lovetianci.cn/DotNET/CSharp_Interview_ques_2/",
            "title": "C#理论面试题",
            "date_published": "2020-03-06T13:14:20.000Z",
            "content_html": "<h2 id=\"这次的面试题大多为理论知识\"><a class=\"markdownIt-Anchor\" href=\"#这次的面试题大多为理论知识\">#</a> 这次的面试题大多为理论知识</h2>\n<a id=\"more\"></a>\n<h2 id=\"1-数组有没有length方法string有没有length方法\"><a class=\"markdownIt-Anchor\" href=\"#1-数组有没有length方法string有没有length方法\">#</a> 1. 数组有没有 length () 方法，String 有没有 length () 方法？</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> sz <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">String</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"很明显这两个都有length方法\"><a class=\"markdownIt-Anchor\" href=\"#很明显这两个都有length方法\">#</a> 很明显这两个都有 length () 方法</h3>\n<h2 id=\"2-谈谈finalfinallyfinalize的区别\"><a class=\"markdownIt-Anchor\" href=\"#2-谈谈finalfinallyfinalize的区别\">#</a> 2. 谈谈 final，finally，finalize 的区别</h2>\n<pre><code>final ：修饰符（关键字）如果类被声明为final,就不能再派生新的子类也不能作为父类被继承\nfinally ：在异常处理时提供finally块来执行操作，不管有没有异常，finally里面的代码始终会被执行\nfinalize ：方法名，finalize是在Object类中定义的，所有的类都继承了它\n</code></pre>\n<h2 id=\"3-如何处理几十万条并发数据\"><a class=\"markdownIt-Anchor\" href=\"#3-如何处理几十万条并发数据\">#</a> 3. 如何处理几十万条并发数据</h2>\n<pre><code>使用缓存，访问过的数据不需要二次访问数据库\n数据库使用存储过程，尽量分页\n使用多线程分批次处理\n</code></pre>\n<h2 id=\"4-堆和栈的区别\"><a class=\"markdownIt-Anchor\" href=\"#4-堆和栈的区别\">#</a> 4. 堆和栈的区别</h2>\n<pre><code>栈：由编译器自动分配、释放，在函数体中定义的变量通常在栈上\n堆：由程序员分配释放，用new、malloc分配内存函数得到的就是在堆上\n</code></pre>\n<h2 id=\"5-成员变量和成员函数前加static的作用\"><a class=\"markdownIt-Anchor\" href=\"#5-成员变量和成员函数前加static的作用\">#</a> 5. 成员变量和成员函数前加 static 的作用</h2>\n<pre><code>它们被称为常成员变量和常成员函数，又称为类成员变量和类成员函数，分别用来反映类的状态，\n比如类成员变量可以用来统计类实例的数量，类成员函数负责这种统计的动作\n</code></pre>\n<h2 id=\"6-c可否直接对内存进行操作\"><a class=\"markdownIt-Anchor\" href=\"#6-c可否直接对内存进行操作\">#</a> 6. C# 可否直接对内存进行操作</h2>\n<pre><code>C#可以直接对内存进行操作。但是默认情况下，为了保持类型安全，C#不支持指针运算\n但是可以通过使用unsafe关键字，定义可使用指针的不安全代码\n</code></pre>\n<h2 id=\"7-const和readonly\"><a class=\"markdownIt-Anchor\" href=\"#7-const和readonly\">#</a> 7. Const 和 ReadOnly？</h2>\n<pre><code>Const关键字用来声明编译时常量\nReadOnly用来声明运行时常量\n</code></pre>\n<h2 id=\"8-string和stringbuffer的区别和优缺点\"><a class=\"markdownIt-Anchor\" href=\"#8-string和stringbuffer的区别和优缺点\">#</a> 8. String 和 StringBuffer 的区别和优缺点</h2>\n<pre><code>String类表示内容不可改变的字符串\nStringBuffer类表示内容可以被修改的字符串\nStringBuffer的执行速度要大于String\n</code></pre>\n<h2 id=\"9什么是值类型什么是引用类型\"><a class=\"markdownIt-Anchor\" href=\"#9什么是值类型什么是引用类型\">#</a> 9. 什么是值类型，什么是引用类型？</h2>\n<pre><code>值类型（value type）：byte，short，int，long，float，double，decimal，char，bool 和 struct 统称为值类型。值类型变量声明后，不管是否已经赋值，编译器为其分配内存。\n引用类型（reference type）：string 和 class统称为引用类型。当声明一个类时，只在栈中分配一小片内存用于容纳一个地址，而此时并没有为其分配堆上的内存空间。当使用 new 创建一个类的实例时，分配堆上的空间，并把堆上空间的地址保存到栈上分配的小片空间中。\n</code></pre>\n<h3 id=\"先到这里吧\"><a class=\"markdownIt-Anchor\" href=\"#先到这里吧\">#</a> 先到这里吧！</h3>\n<p><img data-src=\"bug.jpg\" alt=\"日常自嘲\"></p>\n",
            "tags": [
                "面试题"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/CSharp_Interview_ques_1/",
            "url": "https://blog.lovetianci.cn/DotNET/CSharp_Interview_ques_1/",
            "title": "C#常见算法题",
            "date_published": "2020-03-03T10:20:30.000Z",
            "content_html": "<h2 id=\"记录一下遇到过的面试题\"><a class=\"markdownIt-Anchor\" href=\"#记录一下遇到过的面试题\">#</a> 记录一下遇到过的面试题</h2>\n<a id=\"more\"></a>\n<p><img data-src=\"low.png\" alt=\"我怎么这么垃圾，我要有技术会是这鬼样？\"></p>\n<h2 id=\"打印出2000-2500之间所有的闰年年份\"><a class=\"markdownIt-Anchor\" href=\"#打印出2000-2500之间所有的闰年年份\">#</a> 打印出 2000-2500 之间所有的闰年年份</h2>\n<h4 id=\"1年份必须为4的倍数\"><a class=\"markdownIt-Anchor\" href=\"#1年份必须为4的倍数\">#</a> 1. 年份必须为 4 的倍数</h4>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> a <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2500</span><span class=\"token punctuation\">;</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">%</span> <span class=\"token number\">4</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"打印出12320的和就是1-20的阶乘之和\"><a class=\"markdownIt-Anchor\" href=\"#打印出12320的和就是1-20的阶乘之和\">#</a> 打印出 1+2!+3!+…+20! 的和，就是 1-20 的阶乘之和</h2>\n<h3 id=\"第一种方法\"><a class=\"markdownIt-Anchor\" href=\"#第一种方法\">#</a> 第一种方法</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        sum <span class=\"token operator\">+=</span> <span class=\"token function\">jieCheng</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">jieCheng</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> n <span class=\"token operator\">*</span> <span class=\"token function\">jieCheng</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"第二种方法\"><a class=\"markdownIt-Anchor\" href=\"#第二种方法\">#</a> 第二种方法</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> n <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> temp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        temp <span class=\"token operator\">*=</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    sum <span class=\"token operator\">+=</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"写出一个方法参数是三个整数xyz按从小到大排序\"><a class=\"markdownIt-Anchor\" href=\"#写出一个方法参数是三个整数xyz按从小到大排序\">#</a> 写出一个方法，参数是三个整数（x,y,z），按从小到大排序</h2>\n<h3 id=\"第一种使用数组自带的排序\"><a class=\"markdownIt-Anchor\" href=\"#第一种使用数组自带的排序\">#</a> 第一种使用数组自带的排序</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PaiXu</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> z<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> num <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">int</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Array<span class=\"token punctuation\">.</span><span class=\"token function\">Sort</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"从小到大结果依次为：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"如果题目要求从用户输入的三个整数来进行排序的话可以这样写\"><a class=\"markdownIt-Anchor\" href=\"#如果题目要求从用户输入的三个整数来进行排序的话可以这样写\">#</a> 如果题目要求从用户输入的三个整数来进行排序的话，可以这样写</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> num <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">int</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入三个整数\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入第&#123;0&#125;个数字\"</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    num<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 从小到大排序</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Array<span class=\"token punctuation\">.</span><span class=\"token function\">Sort</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数字从小到大依次为：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"112358获取第30个数值\"><a class=\"markdownIt-Anchor\" href=\"#112358获取第30个数值\">#</a> 1，1，2，3，5，8，… 获取第 30 个数值</h2>\n<h3 id=\"没有规定的话这个方便理解\"><a class=\"markdownIt-Anchor\" href=\"#没有规定的话这个方便理解\">#</a> 没有规定的话这个方便理解</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">int</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>list<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> list<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"必须使用递归的话可以这样写\"><a class=\"markdownIt-Anchor\" href=\"#必须使用递归的话可以这样写\">#</a> 必须使用递归的话可以这样写</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetNum</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">GetNum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">GetNum</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">GetNum</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"最经典的冒泡排序\"><a class=\"markdownIt-Anchor\" href=\"#最经典的冒泡排序\">#</a> 最经典的冒泡排序</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> tem <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> list <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">421</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> list<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> list<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> list<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            tem <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            list<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            list<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"产生一个int数组长度为100并向其中随即插入1-100且不能重复\"><a class=\"markdownIt-Anchor\" href=\"#产生一个int数组长度为100并向其中随即插入1-100且不能重复\">#</a> 产生一个 int 数组，长度为 100，并向其中随即插入 1-100，且不能重复</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span> lst <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Random</span> r <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> temp <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">Next</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">==</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>lst<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        lst<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> lst<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"打印九九乘法表\"><a class=\"markdownIt-Anchor\" href=\"#打印九九乘法表\">#</a> 打印九九乘法表</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;0&#125;*&#123;1&#125;=&#123;2,2&#125; \"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"无师自通的水仙花数两种方式都可以取个十百位\"><a class=\"markdownIt-Anchor\" href=\"#无师自通的水仙花数两种方式都可以取个十百位\">#</a> 无师自通的水仙花数，两种方式都可以取个十百位</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">//int n1 = i / 100 % 10;// 百位</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">//int n2 = i / 10 % 10; // 十位</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//int n3 = i % 10;// 个位</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> num <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> n1 <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 百位</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> n2 <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 十位</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> n3 <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 个位</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n1 <span class=\"token operator\">*</span> n1 <span class=\"token operator\">*</span> n1 <span class=\"token operator\">+</span> n2 <span class=\"token operator\">*</span> n2 <span class=\"token operator\">*</span> n2 <span class=\"token operator\">+</span> n3 <span class=\"token operator\">*</span> n3 <span class=\"token operator\">*</span> n3 <span class=\"token operator\">==</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"行了行了就这样吧\"><a class=\"markdownIt-Anchor\" href=\"#行了行了就这样吧\">#</a> 行了行了就这样吧！！！</h3>\n",
            "tags": [
                "面试题"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/CSharp_Delegate/",
            "url": "https://blog.lovetianci.cn/DotNET/CSharp_Delegate/",
            "title": "C# Delegate",
            "date_published": "2020-02-10T22:00:00.000Z",
            "content_html": "<h3 id=\"用基本的代码了解委托delegate-action和func的用法\"><a class=\"markdownIt-Anchor\" href=\"#用基本的代码了解委托delegate-action和func的用法\">#</a> 用基本的代码了解委托 Delegate、Action 和 Func 的用法</h3>\n<a id=\"more\"></a>\n<h3 id=\"直接上代码\"><a class=\"markdownIt-Anchor\" href=\"#直接上代码\">#</a> 直接上代码</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 定义委托</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">delegate</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SayHello</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 英文方法</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">EnglishSay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> userName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello!\"</span> <span class=\"token operator\">+</span> userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 中文方法</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ChineseSay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> userName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你好!\"</span> <span class=\"token operator\">+</span> userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// 将委托当参数传入另一个方法</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Say</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> userName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SayHello</span> say<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token function\">say</span><span class=\"token punctuation\">(</span>userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">// 定义一个方法给 Action</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">GetString</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">// 定义一个方法给 Func</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">IsNull</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">IsNullOrEmpty</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">IsNullOrWhiteSpace</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\">// Delegate 用法</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token function\">Say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小明\"</span><span class=\"token punctuation\">,</span> EnglishSay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token function\">Say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小明\"</span><span class=\"token punctuation\">,</span> ChineseSay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token comment\">// Action 无参无返回值</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token class-name\">Action</span> action <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token comment\">// Action 有参无返回值（需定义方法并调用）</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token class-name\">Action<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> stringAction <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Action<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>GetString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token function\">stringAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小明\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token comment\">// Action 有参无返回值（匿名方法直接调用）</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token class-name\">Action<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> string2Action <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Action<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>ac <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>ac<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//ac 等于调用传参的李四</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token function\">string2Action</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小萌\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token comment\">// Func 有参有返回值（需定义方法并调用）</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token class-name\">Func<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span><span class=\"token punctuation\">></span></span> isNullFunc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Func<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>IsNull<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token function\">isNullFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token comment\">// Func 有参有返回值（匿名方法直接调用）</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token class-name\">Func<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span><span class=\"token punctuation\">></span></span> isNull2Func <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Func<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>ac <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">IsNullOrEmpty</span><span class=\"token punctuation\">(</span>ac<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">IsNullOrWhiteSpace</span><span class=\"token punctuation\">(</span>ac<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//ac 等于调用传参的空字符串</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token function\">isNull2Func</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "技术"
            ]
        }
    ]
}