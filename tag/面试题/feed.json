{
    "version": "https://jsonfeed.org/version/1",
    "title": "Tianciの小窝 • All posts by \"面试题\" tag",
    "description": "一身清贫怎敢入繁华<br>两袖清风岂能误佳人",
    "home_page_url": "https://blog.lovetianci.cn",
    "items": [
        {
            "id": "https://blog.lovetianci.cn/DotNET/CSharp_Interview_ques_2/",
            "url": "https://blog.lovetianci.cn/DotNET/CSharp_Interview_ques_2/",
            "title": "C#理论面试题",
            "date_published": "2020-03-06T13:14:20.000Z",
            "content_html": "<h2 id=\"这次的面试题大多为理论知识\"><a class=\"markdownIt-Anchor\" href=\"#这次的面试题大多为理论知识\">#</a> 这次的面试题大多为理论知识</h2>\n<a id=\"more\"></a>\n<h2 id=\"1-数组有没有length方法string有没有length方法\"><a class=\"markdownIt-Anchor\" href=\"#1-数组有没有length方法string有没有length方法\">#</a> 1. 数组有没有 length () 方法，String 有没有 length () 方法？</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> sz <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>sz<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">String</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"很明显这两个都有length方法\"><a class=\"markdownIt-Anchor\" href=\"#很明显这两个都有length方法\">#</a> 很明显这两个都有 length () 方法</h3>\n<h2 id=\"2-谈谈finalfinallyfinalize的区别\"><a class=\"markdownIt-Anchor\" href=\"#2-谈谈finalfinallyfinalize的区别\">#</a> 2. 谈谈 final，finally，finalize 的区别</h2>\n<pre><code>final ：修饰符（关键字）如果类被声明为final,就不能再派生新的子类也不能作为父类被继承\nfinally ：在异常处理时提供finally块来执行操作，不管有没有异常，finally里面的代码始终会被执行\nfinalize ：方法名，finalize是在Object类中定义的，所有的类都继承了它\n</code></pre>\n<h2 id=\"3-如何处理几十万条并发数据\"><a class=\"markdownIt-Anchor\" href=\"#3-如何处理几十万条并发数据\">#</a> 3. 如何处理几十万条并发数据</h2>\n<pre><code>使用缓存，访问过的数据不需要二次访问数据库\n数据库使用存储过程，尽量分页\n使用多线程分批次处理\n使用WebService\n</code></pre>\n<h2 id=\"4-堆和栈的区别\"><a class=\"markdownIt-Anchor\" href=\"#4-堆和栈的区别\">#</a> 4. 堆和栈的区别</h2>\n<pre><code>栈：由编译器自动分配、释放，在函数体中定义的变量通常在栈上\n堆：由程序员分配释放，用new、malloc分配内存函数得到的就是在堆上\n</code></pre>\n<h2 id=\"5-成员变量和成员函数前加static的作用\"><a class=\"markdownIt-Anchor\" href=\"#5-成员变量和成员函数前加static的作用\">#</a> 5. 成员变量和成员函数前加 static 的作用</h2>\n<pre><code>它们被称为常成员变量和常成员函数，又称为类成员变量和类成员函数，分别用来反映类的状态，\n比如类成员变量可以用来统计类实例的数量，类成员函数负责这种统计的动作\n</code></pre>\n<h2 id=\"6-c可否直接对内存进行操作\"><a class=\"markdownIt-Anchor\" href=\"#6-c可否直接对内存进行操作\">#</a> 6. C# 可否直接对内存进行操作</h2>\n<pre><code>C#可以直接对内存进行操作。但是默认情况下，为了保持类型安全，C#不支持指针运算\n但是可以通过使用unsafe关键字，定义可使用指针的不安全代码\n</code></pre>\n<h2 id=\"7-const和readonly\"><a class=\"markdownIt-Anchor\" href=\"#7-const和readonly\">#</a> 7. Const 和 ReadOnly？</h2>\n<pre><code>Const关键字用来声明编译时常量\nReadOnly用来声明运行时常量\n</code></pre>\n<h2 id=\"8-string和stringbuffer的区别和优缺点\"><a class=\"markdownIt-Anchor\" href=\"#8-string和stringbuffer的区别和优缺点\">#</a> 8. String 和 StringBuffer 的区别和优缺点</h2>\n<pre><code>String类表示内容不可改变的字符串\nStringBuffer类表示内容可以被修改的字符串\nStringBuffer的执行速度要大于String\n</code></pre>\n<h2 id=\"9-产生一个int数组长度为100并向其中随即插入1-100且不能重复\"><a class=\"markdownIt-Anchor\" href=\"#9-产生一个int数组长度为100并向其中随即插入1-100且不能重复\">#</a> 9. 产生一个 int 数组，长度为 100，并向其中随即插入 1-100，且不能重复</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span> lst <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Random</span> r <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> temp <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">Next</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">==</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>lst<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        lst<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> lst<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"10-打印九九乘法表\"><a class=\"markdownIt-Anchor\" href=\"#10-打印九九乘法表\">#</a> 10. 打印九九乘法表</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;0&#125;*&#123;1&#125;=&#123;2,2&#125; \"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"先到这里吧\"><a class=\"markdownIt-Anchor\" href=\"#先到这里吧\">#</a> 先到这里吧！</h3>\n<p><img data-src=\"bug.jpg\" alt=\"日常自嘲\"></p>\n",
            "tags": [
                "面试题"
            ]
        },
        {
            "id": "https://blog.lovetianci.cn/DotNET/CSharp_Interview_ques_1/",
            "url": "https://blog.lovetianci.cn/DotNET/CSharp_Interview_ques_1/",
            "title": "C#简单面试题",
            "date_published": "2020-03-03T10:20:30.000Z",
            "content_html": "<h2 id=\"记录一下遇到过的面试题\"><a class=\"markdownIt-Anchor\" href=\"#记录一下遇到过的面试题\">#</a> 记录一下遇到过的面试题</h2>\n<a id=\"more\"></a>\n<p><img data-src=\"low.png\" alt=\"我怎么这么垃圾，我要有技术会是这鬼样？\"></p>\n<h2 id=\"先看一下第一题\"><a class=\"markdownIt-Anchor\" href=\"#先看一下第一题\">#</a> 先看一下第一题</h2>\n<p><img data-src=\"ToString.png\" alt=\"ToString用法\"></p>\n<h3 id=\"tostring的方法摘要使用指定的格式将此实例的数值转换为它的等效字符串表示形式\"><a class=\"markdownIt-Anchor\" href=\"#tostring的方法摘要使用指定的格式将此实例的数值转换为它的等效字符串表示形式\">#</a> ToString 的方法摘要：使用指定的格式，将此实例的数值转换为它的等效字符串表示形式。</h3>\n<h3 id=\"我理解的意思是tostring不跟参数就直接转换为字符串而跟参数则根据参数的格式把相应变量转换成指定格式\"><a class=\"markdownIt-Anchor\" href=\"#我理解的意思是tostring不跟参数就直接转换为字符串而跟参数则根据参数的格式把相应变量转换成指定格式\">#</a> 我理解的意思是：ToString 不跟参数，就直接转换为字符串，而跟参数，则根据参数的格式，把相应变量转换成指定格式</h3>\n<h3 id=\"上题要求consolewriteline里面输出的是多少通过答案我们大胆猜测一下答案中的8为strlength为str字符串的长度等于8而不是因为str的最后一位数是800为变换后的格式格式为两位数而8是个位数所以答案为08\"><a class=\"markdownIt-Anchor\" href=\"#上题要求consolewriteline里面输出的是多少通过答案我们大胆猜测一下答案中的8为strlength为str字符串的长度等于8而不是因为str的最后一位数是800为变换后的格式格式为两位数而8是个位数所以答案为08\">#</a> 上题要求 Console.WriteLine 里面输出的是多少，通过答案我们大胆猜测一下，答案中的 8 为 str.Length 为 str 字符串的长度等于 8，而不是因为 str 的最后一位数是 8，“00&quot; 为变换后的格式，格式为两位数，而 8 是个位数，所以答案为 08</h3>\n<h3 id=\"然后我又看到了这样一段话\"><a class=\"markdownIt-Anchor\" href=\"#然后我又看到了这样一段话\">#</a> 然后我又看到了这样一段话</h3>\n<p><img data-src=\"ToString2.png\" alt=\"ToString\"></p>\n<h3 id=\"表达能力不好意思大致是这样的如果数值小数位数例如1245与格式000后的小数位数多一位那么结果将会把最后一位给四舍五入掉直接上代码看一下结果等于125\"><a class=\"markdownIt-Anchor\" href=\"#表达能力不好意思大致是这样的如果数值小数位数例如1245与格式000后的小数位数多一位那么结果将会把最后一位给四舍五入掉直接上代码看一下结果等于125\">#</a> 表达能力不好，意思大致是这样的：如果数值小数位数 (例如：12.45) 与格式（“00.0”）后的小数位数多一位，那么结果将会把最后一位给四舍五入掉，直接上代码看一下结果等于 12.5</h3>\n<p><img data-src=\"ToString3.png\" alt=\"ToString\"></p>\n<h2 id=\"第二题打印出2000-2500之间所有的闰年年份必须满足两个条件1年份必须为4的倍数2年份如果为100的倍数必须同为400的倍数\"><a class=\"markdownIt-Anchor\" href=\"#第二题打印出2000-2500之间所有的闰年年份必须满足两个条件1年份必须为4的倍数2年份如果为100的倍数必须同为400的倍数\">#</a> 第二题，打印出 2000-2500 之间所有的闰年年份，必须满足两个条件：1：年份必须为 4 的倍数，2：年份如果为 100 的倍数，必须同为 400 的倍数</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> a <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2500</span><span class=\"token punctuation\">;</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 年份为 4 的倍数，年份如果为 100 的倍数必须同为 400 的倍数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">%</span> <span class=\"token number\">4</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">%</span> <span class=\"token number\">400</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> a <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"第三题打印出12320的和说白了就是1-20的阶乘之和\"><a class=\"markdownIt-Anchor\" href=\"#第三题打印出12320的和说白了就是1-20的阶乘之和\">#</a> 第三题，打印出 1+2!+3!+…+20! 的和，说白了就是 1-20 的阶乘之和</h2>\n<h3 id=\"第一种方法\"><a class=\"markdownIt-Anchor\" href=\"#第一种方法\">#</a> 第一种方法</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        sum <span class=\"token operator\">+=</span> <span class=\"token function\">jieCheng</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">jieCheng</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> n <span class=\"token operator\">*</span> <span class=\"token function\">jieCheng</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"第二种方法\"><a class=\"markdownIt-Anchor\" href=\"#第二种方法\">#</a> 第二种方法</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> n <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> temp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        temp <span class=\"token operator\">*=</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    sum <span class=\"token operator\">+=</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"最后一题写出一个方法参数是三个整数xyz按从小到大排序\"><a class=\"markdownIt-Anchor\" href=\"#最后一题写出一个方法参数是三个整数xyz按从小到大排序\">#</a> 最后一题，写出一个方法，参数是三个整数（x,y,z），按从小到大排序</h2>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PaiXu</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> z<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> num <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">int</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Array<span class=\"token punctuation\">.</span><span class=\"token function\">Sort</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"从小到大结果依次为：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"如果题目要求从用户输入的三个整数来进行排序的话可以这样写\"><a class=\"markdownIt-Anchor\" href=\"#如果题目要求从用户输入的三个整数来进行排序的话可以这样写\">#</a> 如果题目要求从用户输入的三个整数来进行排序的话，可以这样写</h3>\n<figure class=\"highlight csharp\"><figcaption data-lang=\"C#\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> num <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">int</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入三个整数\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入第&#123;0&#125;个数字\"</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    num<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 从小到大排序</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Array<span class=\"token punctuation\">.</span><span class=\"token function\">Sort</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数字从小到大依次为：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"行了行了就这样吧\"><a class=\"markdownIt-Anchor\" href=\"#行了行了就这样吧\">#</a> 行了行了就这样吧！！！</h3>\n",
            "tags": [
                "面试题"
            ]
        }
    ]
}